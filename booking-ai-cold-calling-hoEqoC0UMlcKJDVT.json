{"createdAt":"2025-04-10T11:26:33.436Z","updatedAt":"2025-04-16T07:36:15.378Z","id":"hoEqoC0UMlcKJDVT","name":"Booking AI Cold Calling","active":true,"nodes":[{"parameters":{"httpMethod":"POST","path":"b3d19683-0f3f-4a61-bb08-3a058fb5b0ab","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-860,700],"id":"8107ce1f-9b83-4fc5-95d2-cd8d6d76db43","name":"Tool-Calendar-Webhook","webhookId":"b3d19683-0f3f-4a61-bb08-3a058fb5b0ab"},{"parameters":{"respondWith":"json","responseBody":"={\n    \"results\": [\n        {\n            \"toolCallId\": \"{{ $('Event = tool-call').item.json.body.message.toolWithToolCallList[0].toolCall.id }}\",\n            \"result\": \"We've got available slots at {{ $json.availSlots }}, do any of those work?\"\n        }\n    ]\n}","options":{"responseCode":200}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1460,280],"id":"41d19db4-14f5-49c3-afda-dfc9d64000a5","name":"Respond to Webhook"},{"parameters":{"respondWith":"json","responseBody":"={\n    \"results\": [\n        {\n            \"toolCallId\": \"{{ $('Event = tool-call').item.json.body.message.toolWithToolCallList[0].toolCall.id }}\",\n            \"result\": \"Hmm, that day is booked, we've got available slots at {{ $json.availSlots }}, for the following day. Do any of those work?\"\n        }\n    ]\n}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1460,460],"id":"3b8a89b4-a0a8-406d-a166-ed0b95918e43","name":"Respond to Webhook1"},{"parameters":{"respondWith":"json","responseBody":"={\n    \"results\": [\n        {\n            \"toolCallId\": \"{{ $('Event = tool-call').item.json.body.message.toolWithToolCallList[0].toolCall.id }}\",\n            \"result\": \"Hmm, that day is booked, we've got available slots at {{ $json.availSlots }}, 2 days from then. Do any of those work?\"\n        }\n    ]\n}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1460,640],"id":"37a40be1-ed84-4b53-84c5-a8773406b495","name":"Respond to Webhook2"},{"parameters":{"respondWith":"json","responseBody":"={\n    \"results\": [\n        {\n            \"toolCallId\": \"{{ $('tool-call-name').item.json.body.message.toolCalls[0].id }}\",\n            \"result\": \"I've created your booking, you should receive an SMS confirmation with the meeting link shortly?\"\n        }\n    ]\n}","options":{"responseCode":200}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[260,1080],"id":"1460505e-985c-4228-b8eb-2e664a35eb74","name":"Respond to Webhook3"},{"parameters":{"assignments":{"assignments":[{"id":"7d7501f6-b357-4524-9c8d-75b29e1a820b","name":"startTime","value":"={{ DateTime.fromISO($json.body.message.toolCalls[0].function.arguments.requestedTime).toFormat(\"yyyy-MM-dd\") + \"T09:00:00+05:30\" }}","type":"string"},{"id":"c33c40ee-7dac-4159-9def-3eb977cf51d8","name":"attempt","value":"=0","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-140,460],"id":"1d27f8ac-fd17-48a3-b066-f571e7c4a140","name":"Start Time + Attempt"},{"parameters":{"assignments":{"assignments":[{"id":"7d7501f6-b357-4524-9c8d-75b29e1a820b","name":"startTime","value":"={{ $json.startTime }}","type":"string"},{"id":"c33c40ee-7dac-4159-9def-3eb977cf51d8","name":"attempt","value":"={{ $json.attempt }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-140,660],"id":"a5f1ff2b-68af-45d9-b600-b7659f0c71a8","name":"Start Time + Attempt 1"},{"parameters":{"assignments":{"assignments":[{"id":"7d7501f6-b357-4524-9c8d-75b29e1a820b","name":"startTime","value":"={{ $json.startTime }}","type":"string"},{"id":"c33c40ee-7dac-4159-9def-3eb977cf51d8","name":"attempt","value":"={{ $json.attempt }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-140,860],"id":"3b4e0be0-ea25-463f-a308-1b56b0562523","name":"Start Time + Attempt 2"},{"parameters":{"url":"https://api.cal.com/v1/slots","authentication":"predefinedCredentialType","nodeCredentialType":"calApi","sendQuery":true,"queryParameters":{"parameters":[{"name":"eventTypeId","value":"2258724"},{"name":"startTime","value":"={{ $json.startTime }}"},{"name":"endTime","value":"={{ DateTime.fromISO($json.startTime).plus({ hours: 8 }).toFormat(\"yyyy-MM-dd'T'HH:mm:ss+05:30\") }}"},{"name":"timeZone","value":"Asia/Calcutta"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[60,460],"id":"a622d720-7826-40fd-9971-f138b67505fb","name":"AvailSlots","notesInFlow":false,"alwaysOutputData":false,"credentials":{"calApi":{"id":"JESMQOlBzPzipY89","name":"Cal account"}}},{"parameters":{"url":"https://api.cal.com/v1/slots","authentication":"predefinedCredentialType","nodeCredentialType":"calApi","sendQuery":true,"queryParameters":{"parameters":[{"name":"eventTypeId","value":"2258724"},{"name":"startTime","value":"={{ $json.startTime }}"},{"name":"endTime","value":"={{ DateTime.fromISO($json.startTime).plus({ hours: 8 }).toFormat(\"yyyy-MM-dd'T'HH:mm:ss+05:30\") }}"},{"name":"timeZone","value":"Asia/Calcutta"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[60,660],"id":"61f064d5-3749-432a-8fd9-94d7766c01d3","name":"AvailSlots1","notesInFlow":false,"alwaysOutputData":false,"credentials":{"calApi":{"id":"JESMQOlBzPzipY89","name":"Cal account"}}},{"parameters":{"url":"https://api.cal.com/v1/slots","authentication":"predefinedCredentialType","nodeCredentialType":"calApi","sendQuery":true,"queryParameters":{"parameters":[{"name":"eventTypeId","value":"2258724"},{"name":"startTime","value":"={{ $json.startTime }}"},{"name":"endTime","value":"={{ DateTime.fromISO($json.startTime).plus({ hours: 8 }).toFormat(\"yyyy-MM-dd'T'HH:mm:ss+05:30\") }}"},{"name":"timeZone","value":"Asia/Calcutta"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[60,860],"id":"435a33f6-4e9b-4459-8f4f-c6972e24fa87","name":"AvailSlots2","notesInFlow":false,"alwaysOutputData":false,"credentials":{"calApi":{"id":"JESMQOlBzPzipY89","name":"Cal account"}}},{"parameters":{"jsCode":"const items = $input.all();\nif (items.length === 0) {\n    return [];\n}\n\nconst data = items[0].json;\n\n// Ensure \"attempt\" is set; default to 0 if missing\nconst attempt = data.attempt !== undefined ? data.attempt : 0;\n\n// The \"slots\" object might have multiple date keys. We only pick the first one.\nconst dateKeys = Object.keys(data.slots || {});\nif (dateKeys.length === 0) {\n  // No date keys => no slots at all, so return with empty availability\n  return [{\n    json: {\n      day: null,\n      availSlots: [],\n      startTime: data.startTime,\n      attempt: attempt\n    }\n  }];\n}\n\nconst dateKey = dateKeys[0]; // First available date\nconst timeSlots = data.slots[dateKey] || [];\n\n// Shuffle function\nconst shuffleArray = (arr) => arr.sort(() => Math.random() - 0.5);\nconst shuffled = shuffleArray([...timeSlots]);\n\n// Slice first 3 slots\nconst sliced = shuffled.slice(0, 3);\n\n// Sort by time (assuming each slot has a \"time\" property)\nsliced.sort((a, b) => new Date(a.time) - new Date(b.time));\n\n// Return the processed data along with day, startTime, and attempt\nreturn [{\n  json: {\n    day: dateKey,\n    availSlots: sliced,\n    startTime: data.startTime,\n    attempt: attempt\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[260,460],"id":"24dc49b8-4a30-4242-80ad-326e7ad045c8","name":"Slice + Shuffle"},{"parameters":{"jsCode":"const items = $input.all();\nif (items.length === 0) {\n    return [];\n}\n\nconst data = items[0].json;\n\n// Ensure \"attempt\" is set; default to 1 if missing\nconst attempt = data.attempt !== undefined ? data.attempt : 1;\n\n// The \"slots\" object might have multiple date keys. We only pick the first one.\nconst dateKeys = Object.keys(data.slots || {});\nif (dateKeys.length === 0) {\n  // No date keys => no slots at all, so return with empty availability\n  return [{\n    json: {\n      day: null,\n      availSlots: [],\n      startTime: data.startTime,\n      attempt: attempt\n    }\n  }];\n}\n\nconst dateKey = dateKeys[0]; // First available date\nconst timeSlots = data.slots[dateKey] || [];\n\n// Shuffle function\nconst shuffleArray = (arr) => arr.sort(() => Math.random() - 0.5);\nconst shuffled = shuffleArray([...timeSlots]);\n\n// Slice first 3 slots\nconst sliced = shuffled.slice(0, 3);\n\n// Sort by time (assuming each slot has a \"time\" property)\nsliced.sort((a, b) => new Date(a.time) - new Date(b.time));\n\n// Return the processed data along with day, startTime, and attempt\nreturn [{\n  json: {\n    day: dateKey,\n    availSlots: sliced,\n    startTime: data.startTime,\n    attempt: attempt\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[260,660],"id":"bd43db03-cf67-4681-8b62-6e4529626bef","name":"Slice + Shuffle1"},{"parameters":{"jsCode":"const items = $input.all();\nif (items.length === 0) {\n    return [];\n}\n\nconst data = items[0].json;\n\n// Ensure \"attempt\" is set; default to 1 if missing\nconst attempt = data.attempt !== undefined ? data.attempt : 2;\n\n// The \"slots\" object might have multiple date keys. We only pick the first one.\nconst dateKeys = Object.keys(data.slots || {});\nif (dateKeys.length === 0) {\n  // No date keys => no slots at all, so return with empty availability\n  return [{\n    json: {\n      day: null,\n      availSlots: [],\n      startTime: data.startTime,\n      attempt: attempt\n    }\n  }];\n}\n\nconst dateKey = dateKeys[0]; // First available date\nconst timeSlots = data.slots[dateKey] || [];\n\n// Shuffle function\nconst shuffleArray = (arr) => arr.sort(() => Math.random() - 0.5);\nconst shuffled = shuffleArray([...timeSlots]);\n\n// Slice first 3 slots\nconst sliced = shuffled.slice(0, 3);\n\n// Sort by time (assuming each slot has a \"time\" property)\nsliced.sort((a, b) => new Date(a.time) - new Date(b.time));\n\n// Return the processed data along with day, startTime, and attempt\nreturn [{\n  json: {\n    day: dateKey,\n    availSlots: sliced,\n    startTime: data.startTime,\n    attempt: attempt\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[260,860],"id":"91eccf74-c971-46a3-a4e9-316df4ee404c","name":"Slice + Shuffle2"},{"parameters":{"jsCode":"const data = $input.first().json;\nconst availSlots = data.availSlots || [];\nconst attempt = data.attempt !== undefined ? Number(data.attempt) : 0;\nconst startTime = data.startTime;\n\n// If availSlots isn’t an array or is empty, return \"busy\"\nif (!Array.isArray(availSlots) || availSlots.length === 0) {\n  return [{\n    json: {\n      availSlots: \"busy\",\n      attempt,\n      startTime\n    }\n  }];\n}\n\nfunction formatTime(dateInput) {\n  const d = new Date(dateInput);\n  const options = { \n    hour: 'numeric', \n    minute: 'numeric', \n    hour12: true, \n    timeZone: 'Asia/Kolkata' // Changed from America/New_York to Asia/Kolkata\n  };\n  return d.toLocaleTimeString('en-IN', options); // Optional: 'en-IN' for Indian-style formatting\n}\n\n// Filter out any slots without a valid \"time\" property\nconst validSlots = availSlots.filter(slot => slot.time);\nif (validSlots.length === 0) {\n  return [{\n    json: {\n      availSlots: \"busy\",\n      attempt,\n      startTime\n    }\n  }];\n}\n\n// Format each valid slot's time and join them with commas\nconst formatted = validSlots\n  .map(slot => formatTime(slot.time))\n  .join(', ');\n\n// If the formatted string is empty, return \"busy\"\nif (!formatted) {\n  return [{\n    json: {\n      availSlots: \"busy\",\n      attempt,\n      startTime\n    }\n  }];\n}\n\nreturn [{\n  json: {\n    availSlots: formatted,  // e.g. \"10:00 am, 10:15 am, 12:30 pm\"\n    attempt,\n    startTime\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[440,460],"id":"4e1a852b-8de8-498e-9980-daf700409bd7","name":"Format + Filter"},{"parameters":{"jsCode":"const data = $input.first().json;\nconst availSlots = data.availSlots || [];\nconst attempt = data.attempt !== undefined ? Number(data.attempt) : 1;\nconst startTime = data.startTime;\n\n// If availSlots isn’t an array or is empty, return \"busy\"\nif (!Array.isArray(availSlots) || availSlots.length === 0) {\n  return [{\n    json: {\n      availSlots: \"busy\",\n      attempt,\n      startTime\n    }\n  }];\n}\n\nfunction formatTime(dateInput) {\n  const d = new Date(dateInput);\n  const options = { \n    hour: 'numeric', \n    minute: 'numeric', \n    hour12: true, \n    timeZone: 'Asia/Kolkata'\n  };\n  return d.toLocaleTimeString('en-IN', options);\n}\n\n// Filter out any slots without a valid \"time\" property\nconst validSlots = availSlots.filter(slot => slot.time);\nif (validSlots.length === 0) {\n  return [{\n    json: {\n      availSlots: \"busy\",\n      attempt,\n      startTime\n    }\n  }];\n}\n\n// Format each valid slot's time and join them with commas\nconst formatted = validSlots\n  .map(slot => formatTime(slot.time))\n  .join(', ');\n\n// If the formatted string is empty, return \"busy\"\nif (!formatted) {\n  return [{\n    json: {\n      availSlots: \"busy\",\n      attempt,\n      startTime\n    }\n  }];\n}\n\nreturn [{\n  json: {\n    availSlots: formatted,  // e.g. \"10:00 am, 10:15 am, 12:30 pm\"\n    attempt,\n    startTime\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[440,660],"id":"04c0bf04-b92a-46ec-a992-2aa045e7d4be","name":"Format + Filter1"},{"parameters":{"jsCode":"const data = $input.first().json;\nconst availSlots = data.availSlots || [];\nconst attempt = data.attempt !== undefined ? Number(data.attempt) : 2;\nconst startTime = data.startTime;\n\n// If availSlots isn’t an array or is empty, return \"busy\"\nif (!Array.isArray(availSlots) || availSlots.length === 0) {\n  return [{\n    json: {\n      availSlots: \"busy\",\n      attempt,\n      startTime\n    }\n  }];\n}\n\nfunction formatTime(dateInput) {\n  const d = new Date(dateInput);\n  const options = { \n    hour: 'numeric', \n    minute: 'numeric', \n    hour12: true, \n    timeZone: 'Asia/Kolkata'\n  };\n  return d.toLocaleTimeString('en-IN', options);\n}\n\n// Filter out any slots without a valid \"time\" property\nconst validSlots = availSlots.filter(slot => slot.time);\nif (validSlots.length === 0) {\n  return [{\n    json: {\n      availSlots: \"busy\",\n      attempt,\n      startTime\n    }\n  }];\n}\n\n// Format each valid slot's time and join them with commas\nconst formatted = validSlots\n  .map(slot => formatTime(slot.time))\n  .join(', ');\n\n// If the formatted string is empty, return \"busy\"\nif (!formatted) {\n  return [{\n    json: {\n      availSlots: \"busy\",\n      attempt,\n      startTime\n    }\n  }];\n}\n\nreturn [{\n  json: {\n    availSlots: formatted,  // e.g. \"10:00 am, 10:15 am, 12:30 pm\"\n    attempt,\n    startTime\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[440,860],"id":"5dc056f8-df18-4141-922b-ae3a1dd549f3","name":"Format + Filter2"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"df7e5dbc-826e-4763-9a85-87c8136155de","leftValue":"={{ $json.availSlots }}","rightValue":"busy","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[620,460],"id":"2c37cd8b-eaee-45fd-b3c3-efe4af882735","name":"If Time Busy"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"df7e5dbc-826e-4763-9a85-87c8136155de","leftValue":"={{ $json.availSlots }}","rightValue":"busy","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[620,660],"id":"42d1bfdf-139c-4598-99a0-f381613702f8","name":"If Time Busy1"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"df7e5dbc-826e-4763-9a85-87c8136155de","leftValue":"={{ $json.availSlots }}","rightValue":"busy","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[620,860],"id":"bf575b33-d4a3-43a2-afb9-c85a7e305ace","name":"If Time Busy2"},{"parameters":{"assignments":{"assignments":[{"id":"1b2209d1-322e-44be-acd2-dfc0fb278e9d","name":"attempt","value":"={{ Number($('Format + Filter').item.json.attempt) + 1 }}","type":"number"},{"id":"ba93469a-3aa6-4f22-ad70-8be06d8c4719","name":"startTime","value":"={{ DateTime.fromISO($(\"Start Time + Attempt\").item.json.startTime, { setZone: true }).plus({ days: 1 }).toFormat(\"yyyy-MM-dd\")+\"T09:00:00-05:00\" }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[840,320],"id":"4d0bfb26-e6bf-4c72-90c4-702e725ad65c","name":"+1 Day / Attempt"},{"parameters":{"assignments":{"assignments":[{"id":"1b2209d1-322e-44be-acd2-dfc0fb278e9d","name":"attempt","value":"={{ Number($('Format + Filter1').item.json.attempt) + 1 }}","type":"number"},{"id":"ba93469a-3aa6-4f22-ad70-8be06d8c4719","name":"startTime","value":"={{ DateTime.fromISO($(\"Start Time + Attempt 1\").item.json.startTime, { setZone: true }).plus({ days: 1 }).toFormat(\"yyyy-MM-dd\")+\"T09:00:00-05:00\" }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[840,620],"id":"0c18a540-ba7b-48ae-a36e-ff971ed34936","name":"+1 Day / Attempt1"},{"parameters":{"assignments":{"assignments":[{"id":"1b2209d1-322e-44be-acd2-dfc0fb278e9d","name":"attempt","value":"={{ Number($('Format + Filter2').item.json.attempt) + 1 }}","type":"number"},{"id":"ba93469a-3aa6-4f22-ad70-8be06d8c4719","name":"startTime","value":"={{ DateTime.fromISO($(\"Start Time + Attempt 2\").item.json.startTime, { setZone: true }).plus({ days: 1 }).toFormat(\"yyyy-MM-dd\")+\"T09:00:00-05:00\" }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[840,900],"id":"8c560493-88fa-4077-86bf-9b867f790311","name":"+1 Day / Attempt2"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"01279cc4-23ea-4722-bc73-57428d89de78","leftValue":"={{ $('Format + Filter').item.json.attempt }}","rightValue":2,"operator":{"type":"number","operation":"lt"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1040,320],"id":"9fb49e7d-ff7c-4dd5-afc7-bfd085b24c58","name":"Attempt Check"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"01279cc4-23ea-4722-bc73-57428d89de78","leftValue":"={{ $('Format + Filter').item.json.attempt }}","rightValue":2,"operator":{"type":"number","operation":"notEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1040,620],"id":"8130af6f-ff7d-46a9-a38f-46bd4e4e5e9a","name":"Attempt Check1"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"01279cc4-23ea-4722-bc73-57428d89de78","leftValue":"={{ $('Format + Filter').item.json.attempt }}","rightValue":3,"operator":{"type":"number","operation":"notEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1040,900],"id":"9054c5f8-0690-46d7-845a-a5ec9d6ee955","name":"Attempt Check2"},{"parameters":{"assignments":{"assignments":[{"id":"cece0c40-322b-4bec-91d4-f00a2fe85da6","name":"requestedTime","value":"={{ $json.body.message.toolCalls[0].function.arguments.requestedTime }}","type":"string"},{"id":"434329fd-ca96-4e2d-9362-0114ba4f9132","name":"name","value":"={{ $json.body.message.toolWithToolCallList[0].toolCall.function.arguments.name }}","type":"string"},{"id":"6cc111d9-b853-457c-b89a-77cba13dfa2d","name":"reason","value":"={{ $json.body.message.toolWithToolCallList[0].toolCall.function.arguments.reason }}","type":"string"},{"id":"cec9d675-bf79-4ff9-9f04-8f33780fe673","name":"phone","value":"={{ $json.body.message.toolWithToolCallList[0].toolCall.function.arguments.phone}}","type":"string"},{"id":"f0d49b97-5f60-46bd-ab01-64a535cb63b8","name":"email","value":"={{ $json.body.message.toolWithToolCallList[0].toolCall.function.arguments.email}}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-140,1080],"id":"a7d5dc18-4965-48d4-8b3a-373cfa33fe9f","name":"Arguments"},{"parameters":{"method":"POST","url":"https://api.cal.com/v1/bookings","authentication":"predefinedCredentialType","nodeCredentialType":"calApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"eventTypeId\": 2258724,\n  \"start\": \"{{ $json.requestedTime }}+05:30\",\n  \"responses\": {\n    \"name\": \"{{ $json.name }}\",     \n    \"email\": \"{{ $json.email }}\",\n    \"Phone\":  \"{{ $json.phone }}\", \n    \"title\": \"Booking with {{ $json.name }}, and {{ $json.reason }}\",\n     \"location\": {\n      \"value\": \"integrations:google:meet\",\n      \"optionValue\": \"\"\n\n    }\n  },\n  \"metadata\": {},\n  \"timeZone\": \"Asia/Calcutta\",  \n  \"language\": \"en\",\n  \"description\": \"Discovery - {{ $json.reason }}\",\n  \"status\": \"ACCEPTED\",\n  \"smsReminderNumber\": null\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[60,1080],"id":"6e663c48-dbaa-4fcc-87b0-d4b1af99c3c9","name":"BookSlot","credentials":{"calApi":{"id":"JESMQOlBzPzipY89","name":"Cal account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"36dc2d36-a7e7-487b-8698-233e0bc9e05a","leftValue":"={{ $json.body.message.type }}","rightValue":"tool-calls","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-640,700],"id":"abe5fb21-fbb9-4655-9f67-5f43cb1216f7","name":"Event = tool-call"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"7fced170-16e0-4a5d-b3e2-1ac61c101be1","leftValue":"={{ $json.body.message.toolWithToolCallList[0].function.name }}","rightValue":"checkCalendarN8N","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-400,700],"id":"d9f837c8-8d7c-4e1d-96a0-e7a00f7e4d75","name":"tool-call-name"},{"parameters":{"from":"+18723274075","to":"={{ $('tool-call-name').item.json.body.message.call.customer.number }}","message":"=Hey {{ $json.responses.name }},\n\nYour booking has been created for {{ $('tool-call-name').item.json.body.message.toolCalls[0].function.arguments.requestedTime }}.\n\nYou can join the meeting from this link:\n{{ $json.references[0].meetingUrl }}\n\nThank you for your time on the phone. Look forward to meeting. \n\nRegards, \nHiya - Britannia Double Glazing","options":{}},"type":"n8n-nodes-base.twilio","typeVersion":1,"position":[440,1080],"id":"8d7718cf-50df-49fe-a6cb-b4706514d610","name":"Twilio","credentials":{"twilioApi":{"id":"v9KhW0DfO6HPXjjf","name":"Twilio account"}}},{"parameters":{"respondWith":"json","responseBody":"={\n    \"results\": [\n        {\n            \"toolCallId\": \"{{ $('Event = tool-call').item.json.body.message.toolWithToolCallList[0].toolCall.id }}\",\n            \"result\": \"Looks like we are fully booked, did you want to call back in a few days?\"\n        }\n    ]\n}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1460,860],"id":"c7cbbd0b-3a99-4bfa-b546-d6e259901a2d","name":"Respond to Webhook4"},{"parameters":{"operation":"create","base":{"__rl":true,"value":"appOaDXdVW25xklYt","mode":"id"},"table":{"__rl":true,"value":"tbltap6bxLT4xtAIr","mode":"id"},"columns":{"mappingMode":"defineBelow","value":{"Meeting Time":"={{ $('tool-call-name').item.json.body.message.toolCalls[0].function.arguments.requestedTime }}","Status":"Booked","Meeting Link":"={{ $('Respond to Webhook3').item.json.references[0].meetingUrl }}","Name":"={{ $('Respond to Webhook3').item.json.responses.name }}","Number":"={{ $('tool-call-name').item.json.body.message.call.customer.number }}","Reason":"={{ $('Respond to Webhook3').item.json.responses.title }}"},"matchingColumns":[],"schema":[{"id":"Name","displayName":"Name","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Number","displayName":"Number","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Reason","displayName":"Reason","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Meeting Time","displayName":"Meeting Time","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Meeting Link","displayName":"Meeting Link","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Status","displayName":"Status","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Booked","value":"Booked"}],"readOnly":false,"removed":false},{"id":"Assignee","displayName":"Assignee","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[620,1080],"id":"06cdf053-69ce-4653-8dbb-1b7cb7edc831","name":"Booking Record","credentials":{"airtableTokenApi":{"id":"KvMsmK5k38lYm1xK","name":"Airtable Personal Access Token account 3"}}},{"parameters":{"operation":"create","base":{"__rl":true,"value":"appOaDXdVW25xklYt","mode":"id"},"table":{"__rl":true,"value":"tblXyMuGtcpgzuCWF","mode":"id"},"columns":{"mappingMode":"defineBelow","value":{"currency":0,"started":"={{ $('Event = tool-call').item.json.body.message.startedAt }}","ended":"={{ $('Event = tool-call').item.json.body.message.endedAt }}","ended reason":"={{ $('Event = tool-call').item.json.body.message.endedReason }}","cost(stt)":"={{ $('Event = tool-call').item.json.body.message.costBreakdown.stt }}","cost(llm)":"={{ $('Event = tool-call').item.json.body.message.costBreakdown.llm }}","cost(tts)":"={{ $('Event = tool-call').item.json.body.message.costBreakdown.tts }}","cost(vapi)":"={{ $('Event = tool-call').item.json.body.message.costBreakdown.vapi }}","cost(total)":"={{ $('Event = tool-call').item.json.body.message.costBreakdown.total }}","id":"={{ $('Event = tool-call').item.json.body.message.call.id }}","callproviderID":"={{ $('Event = tool-call').item.json.body.message.call.phoneCallProviderId }}","customernumber":"={{ $json.number }}","phonenumberID":"={{ $('Event = tool-call').item.json.body.message.phoneNumber.id }}","transcript":"={{ $('Event = tool-call').item.json.body.message.transcript }}","recording":"={{ $('Event = tool-call').item.json.body.message.recordingUrl }}","type":"={{ $('Event = tool-call').item.json.body.message.call.type }}","milliseconds":"={{ $('Event = tool-call').item.json.body.message.durationMs }}"},"matchingColumns":[],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"callproviderID","displayName":"callproviderID","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"phonenumberID","displayName":"phonenumberID","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"customername","displayName":"customername","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"customernumber","displayName":"customernumber","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"type","displayName":"type","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"started","displayName":"started","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"ended","displayName":"ended","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"milliseconds","displayName":"milliseconds","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"cost(stt)","displayName":"cost(stt)","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"cost(llm)","displayName":"cost(llm)","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"cost(tts)","displayName":"cost(tts)","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"cost(vapi)","displayName":"cost(vapi)","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"cost(total)","displayName":"cost(total)","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"cost(twilio)","displayName":"cost(twilio)","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"cost(totals)","displayName":"cost(totals)","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"currency","displayName":"currency","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"number","readOnly":false,"removed":false},{"id":"cost(aud)","displayName":"cost(aud)","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"ended reason","displayName":"ended reason","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Booking Time","displayName":"Booking Time","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Meeting Link","displayName":"Meeting Link","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"outcome","displayName":"outcome","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Booked","value":"Booked"},{"name":"Interested","value":"Interested"},{"name":"Unqualified","value":"Unqualified"},{"name":"Voicemail","value":"Voicemail"},{"name":"Failed","value":"Failed"}],"readOnly":false,"removed":false},{"id":"transcript","displayName":"transcript","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"recording","displayName":"recording","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[60,1280],"id":"aefee730-61df-4f47-a1db-eebe926b50b9","name":"Raw Data Record ","credentials":{"airtableTokenApi":{"id":"KvMsmK5k38lYm1xK","name":"Airtable Personal Access Token account 3"}}},{"parameters":{"assignments":{"assignments":[{"id":"d86411b9-9043-42ff-938a-d35198eee0d4","name":"number","value":"={{ $json.body.message.call.customer.number }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-140,1280],"id":"b58e4dd2-5ef4-42db-98b7-8a513a4caaf0","name":"Customer Number"},{"parameters":{"authentication":"oAuth2","select":"channel","channelId":{"__rl":true,"value":"C07PZHX72M8","mode":"list","cachedResultName":"sales"},"text":"=*_New booking created for {{ $('Respond to Webhook3').item.json.responses.name }}_*\n\n*Contact Number:* {{ $('tool-call-name').item.json.body.message.call.customer.number }}\n\nBooking time: {{ $('tool-call-name').item.json.body.message.toolCalls[0].function.arguments.requestedTime }}\n\nBooking link: {{ $('Respond to Webhook3').item.json.references[0].meetingUrl }}\n\n<@U07S12BK5MH> <@U07S12D24CT>","otherOptions":{}},"type":"n8n-nodes-base.slack","typeVersion":2.3,"position":[840,1080],"id":"427a9ca2-2a4e-4c7a-8c30-ec39e557c12d","name":"Notify Team","webhookId":"77a14917-4a83-453f-99d8-1393fc883335","disabled":true},{"parameters":{"content":"## Webhook Event-type Handler \nIf server-event = tool-call -> check tool-call name\n- name = checkCalendarN8N -> true\n- name = bookCalendarN8N -> false\n\nIf server-event ≠ tool-call -> false\n- end-of-call-report sent from VAPI only\n","height":220,"width":380,"color":5},"type":"n8n-nodes-base.stickyNote","position":[-680,340],"typeVersion":1,"id":"678222d3-77f0-4c7e-92b3-e390e80c6901","name":"Sticky Note"},{"parameters":{"content":"## Availability Handler\n\nScreening Availability\nThe workflow initializes the attempt counter and start time (formatted as \"yyyy-MM-ddT09:00:00+11:00\" for AEST).\nThe AvailSlots nodes request available slots from Cal.com within an 8-hour window using:\nEvent type ID\nTime zone: Australia/Sydney\nThe response is processed:\nA random subset (3 slots) is selected.\nIf slots are available, they are formatted for user selection.\nIf unavailable, the workflow marks it as \"busy\" and triggers a retry.\nHandling Busy Availability\nIf no slots are found, the If Time Busy condition advances the start time by one day and retries the check.\nIf no slots are found after multiple attempts, the workflow moves to rolling the attempt counter.\nRolling the Attempt Counter\nEach failed attempt increments the attempt counter and shifts the start time forward by a day.\nThe Attempt Check node prevents infinite loops, stopping retries after 3 attempts.\nIf the limit is not reached, the process loops back to recheck availability.\nThis ensures efficient slot selection, automatic retries, and controlled attempt limits","height":420,"width":980,"color":5},"type":"n8n-nodes-base.stickyNote","position":[-260,-60],"typeVersion":1,"id":"bc526fab-149d-4066-ac29-4406fd5973ed","name":"Sticky Note1"},{"parameters":{"content":"## If request time = free; \n- \"We've got available slots at {{ $json.availSlots }}, do any of those work?\"","color":3},"type":"n8n-nodes-base.stickyNote","position":[1680,240],"typeVersion":1,"id":"1019bc93-99f1-4b1f-b68b-d606ae1171aa","name":"Sticky Note2"},{"parameters":{"content":"## If user request time + 1 day = free; \n- \"Hmm, that day is booked, we've got available slots at {{ $json.availSlots }}, for the following day. Do any of those work?\"","width":340,"color":3},"type":"n8n-nodes-base.stickyNote","position":[1680,440],"typeVersion":1,"id":"17a48bb5-499e-4f4b-842b-2a27438833f3","name":"Sticky Note3"},{"parameters":{"content":"## If user request time + 2 day = free; \n- \"Hmm, that day is booked, we've got available slots at {{ $json.availSlots }}, 2 days from then. Do any of those work?\"","width":340,"color":3},"type":"n8n-nodes-base.stickyNote","position":[1680,640],"typeVersion":1,"id":"ada1226e-d716-419b-b3ff-15a8f8de7925","name":"Sticky Note4"},{"parameters":{"content":"## If user request time = busy; \n- \"Looks like we are fully booked, did you want to call back in a few days?\"","width":340,"color":3},"type":"n8n-nodes-base.stickyNote","position":[1680,840],"typeVersion":1,"id":"be3c3040-f578-4ea3-aa3c-2c9a2591874c","name":"Sticky Note5"},{"parameters":{"content":"## Creating a Booking\n1. Extracting Booking Information\nThe Arguments node gathers:\nrequestedTime: Selected time slot.\nname: User’s name.\nreason: Purpose of the booking.\n2. Sending the Booking Request\nThe BookSlot node sends a POST request to https://api.cal.com/v1/bookings with:\n\n{\n  \"eventTypeId\": 1229827,\n  \"start\": \"{{ requestedTime }}+11:00\",\n  \"responses\": {\n    \"name\": \"{{ name }}\",\n    \"email\": \"******\", \n    \"Phone\": \"******\",\n    \"title\": \"Booking with {{ name }}, and Talk AI\",\n    \"location\": { \"value\": \"integrations:google:meet\", \"optionValue\": \"\" }\n  },\n  \"metadata\": {},\n  \"timeZone\": \"******\",\n  \"language\": \"en\",\n  \"description\": \"Discovery - {{ reason }}\",\n  \"status\": \"ACCEPTED\"\n}\n\n\n3. Confirming the Booking\nIf successful, an SMS confirmation is sent via Twilio.\n4. Logging the Booking\nThe Booking Record node stores:\nMeeting time\nStatus (\"Booked\")\nMeeting link\nName & Phone number\n5. Internal Team Notification\nThe Notify Team node sends a Slack message with:\nContact number\nBooking time\nMeeting link","height":820,"width":580,"color":5},"type":"n8n-nodes-base.stickyNote","position":[1060,1120],"typeVersion":1,"id":"3b26484d-2518-49f4-a96c-9208c6d68686","name":"Sticky Note6"},{"parameters":{"content":"## Raw Data Store\n\nStoring;\n- call id's\n- durations\n- costs\n- transcripts / recordings\n- ended-reasons ","height":220,"width":220,"color":5},"type":"n8n-nodes-base.stickyNote","position":[280,1280],"typeVersion":1,"id":"710c2673-a548-47b9-a64d-749ead32c17b","name":"Sticky Note7"},{"parameters":{"content":"## Requirements\n\nCal.com account + event creation + API Key\n\nAirtable Access Token\n\nTwilio Account SID + Auth Token\n\nSlack* (optional)","height":220,"width":380,"color":7},"type":"n8n-nodes-base.stickyNote","position":[-1120,340],"typeVersion":1,"id":"0aa1e4d0-7c35-4d33-a525-eebb902ef294","name":"Sticky Note8"}],"connections":{"Tool-Calendar-Webhook":{"main":[[{"node":"Event = tool-call","type":"main","index":0}]]},"Respond to Webhook3":{"main":[[{"node":"Twilio","type":"main","index":0}]]},"Start Time + Attempt":{"main":[[{"node":"AvailSlots","type":"main","index":0}]]},"Start Time + Attempt 1":{"main":[[{"node":"AvailSlots1","type":"main","index":0}]]},"Start Time + Attempt 2":{"main":[[{"node":"AvailSlots2","type":"main","index":0}]]},"AvailSlots":{"main":[[{"node":"Slice + Shuffle","type":"main","index":0}]]},"AvailSlots1":{"main":[[{"node":"Slice + Shuffle1","type":"main","index":0}]]},"AvailSlots2":{"main":[[{"node":"Slice + Shuffle2","type":"main","index":0}]]},"Slice + Shuffle":{"main":[[{"node":"Format + Filter","type":"main","index":0}]]},"Slice + Shuffle1":{"main":[[{"node":"Format + Filter1","type":"main","index":0}]]},"Slice + Shuffle2":{"main":[[{"node":"Format + Filter2","type":"main","index":0}]]},"Format + Filter":{"main":[[{"node":"If Time Busy","type":"main","index":0}]]},"Format + Filter1":{"main":[[{"node":"If Time Busy1","type":"main","index":0}]]},"Format + Filter2":{"main":[[{"node":"If Time Busy2","type":"main","index":0}]]},"If Time Busy":{"main":[[{"node":"+1 Day / Attempt","type":"main","index":0}],[{"node":"Respond to Webhook","type":"main","index":0}]]},"If Time Busy1":{"main":[[{"node":"+1 Day / Attempt1","type":"main","index":0}],[{"node":"Respond to Webhook1","type":"main","index":0}]]},"If Time Busy2":{"main":[[{"node":"+1 Day / Attempt2","type":"main","index":0}],[{"node":"Respond to Webhook2","type":"main","index":0}]]},"+1 Day / Attempt":{"main":[[{"node":"Attempt Check","type":"main","index":0}]]},"+1 Day / Attempt1":{"main":[[{"node":"Attempt Check1","type":"main","index":0}]]},"+1 Day / Attempt2":{"main":[[{"node":"Attempt Check2","type":"main","index":0}]]},"Attempt Check":{"main":[[{"node":"Start Time + Attempt 1","type":"main","index":0}],[{"node":"Respond to Webhook","type":"main","index":0}]]},"Attempt Check1":{"main":[[{"node":"Start Time + Attempt 2","type":"main","index":0}],[{"node":"Respond to Webhook1","type":"main","index":0}]]},"Attempt Check2":{"main":[[{"node":"Respond to Webhook4","type":"main","index":0}],[{"node":"Respond to Webhook2","type":"main","index":0}]]},"Arguments":{"main":[[{"node":"BookSlot","type":"main","index":0}]]},"BookSlot":{"main":[[{"node":"Respond to Webhook3","type":"main","index":0}]]},"Event = tool-call":{"main":[[{"node":"tool-call-name","type":"main","index":0}],[{"node":"Customer Number","type":"main","index":0}]]},"tool-call-name":{"main":[[{"node":"Start Time + Attempt","type":"main","index":0}],[{"node":"Arguments","type":"main","index":0}]]},"Twilio":{"main":[[{"node":"Booking Record","type":"main","index":0}]]},"Customer Number":{"main":[[{"node":"Raw Data Record ","type":"main","index":0}]]},"Booking Record":{"main":[[]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"78aadbe1-98f0-4ac8-8317-db442b27d8f4","triggerCount":1,"tags":[]}