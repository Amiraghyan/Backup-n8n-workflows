{"createdAt":"2025-02-07T11:03:02.017Z","updatedAt":"2025-02-07T11:29:16.324Z","id":"XZxWRn7XWzJ94dB7","name":"Scrum Meeting Automation","active":false,"nodes":[{"parameters":{"options":{}},"id":"7387af04-f539-41ef-8bfe-3e1b4b481448","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","position":[0,460],"webhookId":"5308edc9-738b-4aae-a789-214e2392579a","typeVersion":1.1},{"parameters":{},"id":"f1146347-fd40-4c27-8925-1eb216e06a73","name":"Window Buffer Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[860,1280],"typeVersion":1.3},{"parameters":{"descriptionType":"manual","toolDescription":"Use this tool when you’re asked to retrieve events data.","operation":"getAll","calendar":{"__rl":true,"value":"m.jasim@gmindia.tech","mode":"list","cachedResultName":"m.jasim@gmindia.tech"},"options":{"timeMin":"={{ $fromAI('start_date') }}","timeMax":"={{ $fromAI('end_date') }}"}},"id":"57e3e0a0-369b-4171-9f67-58c7c77bfda5","name":"Google Calendar - Get Events","type":"n8n-nodes-base.googleCalendarTool","position":[1240,1260],"typeVersion":1.2,"credentials":{"googleCalendarOAuth2Api":{"id":"JSeoedDUbajJMoWN","name":"Google Calendar account 4"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Use this Google Calendar tool when you are asked to create an event.","calendar":{"__rl":true,"value":"m.jasim@gmindia.tech","mode":"list","cachedResultName":"m.jasim@gmindia.tech"},"start":"={{ $fromAI('start_date') }} ","end":"={{ $fromAI('end_date') }} ","useDefaultReminders":false,"additionalFields":{"attendees":[],"description":"={{ $fromAI('event_description') }} ","summary":"={{ $fromAI('event_title') }} "}},"id":"3eef2345-06be-493c-ae70-f500f0eb5880","name":"Google Calendar - Create events","type":"n8n-nodes-base.googleCalendarTool","position":[1660,1260],"typeVersion":1.2,"credentials":{"googleCalendarOAuth2Api":{"id":"JSeoedDUbajJMoWN","name":"Google Calendar account 4"}}},{"parameters":{"content":"## Chat trigger - When a message is received\n\nThis node is the **entry point of the workflow**.  \nIt triggers the workflow whenever a message is sent to the **chat interface**.\n\nOptions with n8n:\n- **Embed the chat interface** anywhere you want.\n- Use a **webhook node** instead of this node to connect with interfaces like **[Streamlit](https://docs.streamlit.io/develop/tutorials/llms/build-conversational-apps)** or **[OpenWebUI](https://docs.openwebui.com/)**.\n- Use nodes for communication platforms (**Slack**, **Teams**, **Discord**, etc.) if you know how to configure them.\n","height":560,"width":320,"color":7},"id":"24e709e3-5512-45d9-b56f-5121caa26e23","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-100,80],"typeVersion":1},{"parameters":{"content":"## Tools Agent - Calendar AI Agent\n\nThis **node** configures the **AI agent** for interaction with Google Calendar.  \nIt includes the following features:\n\n- A **prompt source**: This is the user message derived from the chat input of the preceding node (`When chat message is received`).\n- A **system message**: This defines the system prompt to guide the AI agent's behavior. It incorporates the variable `{{ DateTime.local().toFormat('cccc d LLLL yyyy') }`, allowing the AI agent to determine the current date and interact with Google Calendar accordingly. For example, the agent can understand a request like \"Create an event called 'n8n workflow review' for next Tuesday.\"\n\n\nn8n nodes come with built-in **guardrails**, ensuring that if the user requests tasks outside the AI agent's setup, it may not function as intended. (Feel free to test it!)\n","height":560,"width":1520,"color":7},"id":"dd0b2787-198e-45c0-a975-9925beff5c62","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[340,80],"typeVersion":1},{"parameters":{"promptType":"define","text":"={{ $json.chatInput }}","options":{"systemMessage":"=You are a Google Calendar assistant.\nYour primary goal is to assist the user in managing their calendar effectively using two tools: Event Creation and Event Retrieval. Always base your responses on the current date:\n{{ DateTime.local().toFormat('cccc d LLLL yyyy') }}.\n\nGeneral Guidelines:\n\nIf the user's initial message is vague (e.g., \"hello\" or a generic greeting) or does not specify a request, explain your capabilities clearly.\nExample: \"Hello! I can help you manage your Google Calendar. You can ask me to create an event with a Google Meeting link or retrieve event data. What would you like me to do?\"\nIf the user specifies a request in their first message, begin preparing to use the appropriate tool:\nFor event creation, gather necessary details like the exact start date, end date, title, description, and create a Google Meeting link.\nFor event retrieval, ask for the date range or time period they want to query.\nTool: Event Creation\nWhen asked to create an event with a Google Meeting link:\n\nRequest the exact start and end dates/times from the user.\nDate format: YYYY-MM-DD HH:mm:ss (ensure the times are exact).\nCollect the following information:\nstart_date: Exact start date and time of the event.\nend_date: Exact end date and time of the event.\nevent_title: Event title in uppercase. Suggest one if not provided.\nevent_description: Generate a brief description and present it for confirmation.\ngoogle_meeting_link: Confirm if a Google Meeting link should be generated or use a provided link.\nTool: Event Retrieval\nWhen asked to retrieve events:\n\nAsk for the date range or period they are interested in.\nExamples:\nFor \"last week,\" retrieve events from Monday of the previous week to Friday of the same week.\nFor \"today,\" use the current date.\nFormat the date range:\nstart_date: Start date and time in YYYY-MM-DD HH:mm:ss.\nend_date: End date and time in YYYY-MM-DD HH:mm:ss.\nKey Behaviors:\n\nClarity: Provide a clear and helpful introduction when the user's request is unclear.\nValidation: Confirm details with the user before finalizing actions.\nAdaptation: Handle varying levels of detail in requests (e.g., \"Add a google meeting link for next Monday morning\" or \"Retrieve my events for this weekend\").\nProactivity: Offer suggestions to fill in missing details or clarify ambiguous inputs.\nLanguage Matching: Ensure all interactions, including event titles, descriptions, and messages, are in the user's language to provide a seamless experience."}},"id":"73967f3c-3045-4854-a09c-3411f05486bf","name":"Calendar AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[860,460],"typeVersion":1.7},{"parameters":{"content":"## OpenAI chat model\n\nThis node specifies the chat model used by the agent.  \nIn the template, the **default LLM is gpt-4o** for its high relevance.\n\nOther options:\n- You can **try gpt-4o-mini**, which is more cost-effective.\n- You can also choose **other LLM providers besides OpenAI**, but make sure the LLM you select **supports tool-calling**.\n","height":720,"width":320,"color":5},"id":"bef768b3-5af9-4923-ab78-41825b9d8684","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[340,700],"typeVersion":1},{"parameters":{"content":"## Window buffer memory\n\nThis node manages the **memory** of the agent, specifically the **context window length** for chat history.  \nThe default is set to 5 messages.\n\nNote:  \nThe **memory** is **temporary**. If you want to **store conversations with the agent**, you should use other nodes like **Postgres chat memory**.  \nThis can be easily set up with services like **[Supabase](https://supabase.com/)**.\n","height":720,"width":320,"color":5},"id":"73de4faf-718a-4c38-9879-d3b4f2587f83","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[740,700],"typeVersion":1},{"parameters":{"content":"## Google Calendar - Get Events\n\nThis sub-node is a tool used by the AI agent.  \nIts purpose is to **retrieve events based on the user input**.  \nFor example: *\"Can you give me the events from last week about internal process ?\"*\n\nThe AI agent is designed to **use this tool only** when it has a **date range**.  \nIf the user hasn’t provided a date range, the **AI agent will ask the user** for it.\n\nThe **variables** `{{ $fromAI('start_date') }}` and `{{ $fromAI('end_date') }}` are **dynamically filled by the AI**.\n","height":720,"width":320,"color":5},"id":"b9a394d9-4caf-44b5-96d3-28c06f45586b","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[1140,700],"typeVersion":1},{"parameters":{"content":"## Google Calendar - Create Events\n\nThis sub-node is a tool used by the AI agent.  \nIts purpose is to **create events based on the user input**.  \nFor example: \"Can you create an event 'Quarter revenue meeting' on [date] from [hour] to [hour] ?\"\n\nThe AI agent is designed to **use this tool only** when it has a **date range**.  \nIf the user hasn’t provided a **date range**, the AI agent will **ask the user** for it.  \nThe variables `{{ $fromAI('start_date') }}` and `{{ $fromAI('end_date') }}` are dynamically filled by the AI.\n\nBefore creating the event, the AI agent will **confirm with the user** if the **title** and **description** of the event are correct.  \nThe variables used for this are:\n- `{{ $fromAI('event_title') }}`\n- `{{ $fromAI('event_description') }}`\n","height":720,"width":320,"color":5},"id":"f3d985ad-ce41-4ef6-a30b-ad597fa5ab40","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[1540,700],"typeVersion":1},{"parameters":{"content":"## Having fun with it ? Here’s how to level up this AI agent !  \n\nThis workflow demonstrates **how easily you can set up an AI agent to call tools** for you using **n8n**.  \nThe tasks here are **useful but very basic**.  \n\nIf you want to **enhance the tool-calling capabilities**, consider the following:\n\n- Explore the **\"options\"** in the Google Calendar nodes to see additional features you can use.  \n  For example, let the AI agent add attendees to events it creates.\n\n- Implement the AI agent with your **teammates and link it to each calendar**.  \n  Use a `{{ $fromAI('') }}` variable for the calendar field and refine the prompts to suit your needs.\n\n- Add **more actions** for the AI agent to perform with the **Google Calendar API**, expanding its functionality.\n","height":380,"width":720,"color":4},"id":"6ae70dd3-d114-4a96-8bbf-6fd5cfbd96e2","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","position":[1140,1460],"typeVersion":1},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[460,1260],"id":"f6efba7a-e886-4dae-934a-75ced4316493","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"LpKUzBEiaACwRhaP","name":"Google Gemini(PaLM) Api account 7"}}}],"connections":{"When chat message received":{"main":[[{"node":"Calendar AI Agent","type":"main","index":0}]]},"Window Buffer Memory":{"ai_memory":[[{"node":"Calendar AI Agent","type":"ai_memory","index":0}]]},"Google Calendar - Get Events":{"ai_tool":[[{"node":"Calendar AI Agent","type":"ai_tool","index":0}]]},"Google Calendar - Create events":{"ai_tool":[[{"node":"Calendar AI Agent","type":"ai_tool","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"Calendar AI Agent","type":"ai_languageModel","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"42bb1647-b498-43dc-a0be-dde7d39d4378","triggerCount":0,"tags":[]}