{"createdAt":"2025-03-04T05:03:59.806Z","updatedAt":"2025-03-06T04:34:09.727Z","id":"L62naD3RmIt3dFD9","name":"Automate Each Site Google Analytics Weekly Reporting","active":true,"isArchived":false,"nodes":[{"parameters":{"content":"# Aggregate Google Analytics data and Email the results\n\nThis workflow will check for country views, page engagement and google search console results. It will take this week's data and compare it to last week's data.\n\n[Credit to Keith Rumjahn for the original workflow, which I modified.](https://rumjahn.com/how-i-used-a-i-to-be-an-seo-expert-and-analyzed-my-google-analytics-data-in-n8n-and-make-com/)","height":209.13454984057833,"width":1270.4518485107694,"color":6},"id":"5c35f802-82e7-457a-9f11-4d9026cbf0e0","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[4380,360],"typeVersion":1,"disabled":true},{"parameters":{"content":"## Property ID\n\n1. Create your [Google Analytics Credentials](https://docs.n8n.io/integrations/builtin/credentials/google/oauth-single-service/?utm_source=n8n_app&utm_medium=credential_settings&utm_campaign=create_new_credentials_modal)\n2. Enter your [property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id) or Choose from the List of Properties.","height":745.919853945687,"width":1269.8517211291685,"color":4},"id":"54288de3-60ec-4119-a067-e6b8e67949b9","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[4380,600],"typeVersion":1,"disabled":true},{"parameters":{"propertyId":{"__rl":true,"value":"455453859","mode":"id"},"metricsGA4":{"metricValues":[{"listName":"other","name":"screenPageViews"},{"listName":"other","name":"activeUsers"},{"listName":"other","name":"screenPageViewsPerUser"},{"listName":"other","name":"eventCount"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"unifiedScreenName"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"cc1c37f3-6354-4413-9ee1-473509fc23e7","name":"Get Page Engagement Stats for this week","type":"n8n-nodes-base.googleAnalytics","position":[4460,740],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"QNgzYDBNwqVS9ez3","name":"Google Analytics account 2"}},"disabled":true},{"parameters":{"propertyId":{"__rl":true,"value":"455453859","mode":"id"},"dateRange":"custom","startDate":"={{$today.minus({days: 14})}}","endDate":"={{$today.minus({days: 7})}}","metricsGA4":{"metricValues":[{"listName":"other","name":"screenPageViews"},{"listName":"other","name":"activeUsers"},{"listName":"other","name":"screenPageViewsPerUser"},{"listName":"other","name":"eventCount"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"unifiedScreenName"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"c6b8f171-0e43-4d55-9ba0-c17a8cddca5b","name":"Get Page Engagement Stats for prior week","type":"n8n-nodes-base.googleAnalytics","position":[4860,740],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"QNgzYDBNwqVS9ez3","name":"Google Analytics account 2"}},"disabled":true},{"parameters":{"propertyId":{"__rl":true,"value":"455453859","mode":"id"},"metricsGA4":{"metricValues":[{"listName":"other","name":"activeUsers"},{"listName":"other","name":"engagedSessions"},{"listName":"other","name":"engagementRate"},{"listName":"other","name":"eventCount"},{"listName":"other","name":"organicGoogleSearchAveragePosition"},{"listName":"other","name":"organicGoogleSearchClickThroughRate"},{"listName":"other","name":"organicGoogleSearchClicks"},{"listName":"other","name":"organicGoogleSearchImpressions"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"landingPagePlusQueryString"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"3c056c98-055d-4dc5-870d-d9c01c467714","name":"Get Google Search Results for this week","type":"n8n-nodes-base.googleAnalytics","position":[5260,740],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"QNgzYDBNwqVS9ez3","name":"Google Analytics account 2"}},"disabled":true},{"parameters":{"propertyId":{"__rl":true,"value":"455453859","mode":"id"},"metricsGA4":{"metricValues":[{"listName":"other","name":"=activeUsers"},{"listName":"other","name":"=newUsers"},{"listName":"other","name":"=engagementRate"},{"listName":"other","name":"engagedSessions"},{"listName":"other","name":"=eventCount"},{"listName":"other","name":"=totalUsers"},{"listName":"other","name":"=sessions"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"=country"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"ea5cdc7a-b00b-45d6-86e9-dd2a61451cca","name":"Get Country views data for this week","type":"n8n-nodes-base.googleAnalytics","position":[4860,940],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"QNgzYDBNwqVS9ez3","name":"Google Analytics account 2"}},"disabled":true},{"parameters":{"content":"## AlexK1919 \n![Alex Kim](https://media.licdn.com/dms/image/v2/D5603AQFOYMkqCPl6Sw/profile-displayphoto-shrink_400_400/profile-displayphoto-shrink_400_400/0/1718309808352?e=1736985600&v=beta&t=pQKm7lQfUU1ytuC2Gq1PRxNY-XmROFWbo-BjzUPxWOs)\n\nIâ€™m Alex Kim, an AI-Native Workflow Automation Architect Building Solutions to Optimize your Personal and Professional Life.\n\n[Info](https://beacons.ai/alexk1919)","height":986.0715248510506,"width":231.71528995536218,"color":6},"id":"d52e9084-d00b-490f-b107-ed9904423a03","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[4120,360],"typeVersion":1,"disabled":true},{"parameters":{"jsCode":"// Helper function to decode and parse a URL-encoded JSON string\nfunction decodeUrlString(urlString) {\n    try {\n        const decoded = JSON.parse(decodeURIComponent(urlString));\n        console.log('Decoded URL string:', JSON.stringify(decoded, null, 2));\n        return decoded;\n    } catch (error) {\n        console.log('Error decoding URL string:', error.message);\n        return [];\n    }\n}\n\n// Main function to aggregate data\nfunction aggregateData(items) {\n    // Extract each urlString from the input\n    const data = items[0]?.json; // Get the first JSON object from input\n\n    if (!data) {\n        console.log('No data found in input items.');\n        return {};\n    }\n\n    // Decode each urlString\n    const engagementStatsThisWeek = decodeUrlString(data.urlString1 || '');\n    const engagementStatsPriorWeek = decodeUrlString(data.urlString2 || '');\n    const searchResultsThisWeek = decodeUrlString(data.urlString3 || '');\n    const searchResultsLastWeek = decodeUrlString(data.urlString4 || '');\n    const countryViewsThisWeek = decodeUrlString(data.urlString5 || '');\n    const countryViewsLastWeek = decodeUrlString(data.urlString6 || '');\n\n    // Aggregate the decoded data into a structured object\n    const aggregatedData = {\n        engagementStats: {\n            thisWeek: engagementStatsThisWeek,\n            priorWeek: engagementStatsPriorWeek,\n        },\n        searchResults: {\n            thisWeek: searchResultsThisWeek,\n            lastWeek: searchResultsLastWeek,\n        },\n        countryViews: {\n            thisWeek: countryViewsThisWeek,\n            lastWeek: countryViewsLastWeek,\n        },\n    };\n\n    console.log('Final Aggregated Data:', JSON.stringify(aggregatedData, null, 2));\n    return aggregatedData;\n}\n\n// Get input data from all nodes\nconst items = $input.all();\nconsole.log('Input items to Aggregate Data:', JSON.stringify(items, null, 2));\n\n// Perform aggregation\nconst aggregatedResult = aggregateData(items);\n\n// Output the aggregated result for downstream processing\nreturn { json: aggregatedResult };\n"},"id":"d1160f2f-80ca-4900-8b85-d94073cf38e3","name":"Aggregate Data","type":"n8n-nodes-base.code","position":[4660,1140],"typeVersion":2,"disabled":true},{"parameters":{"propertyId":{"__rl":true,"value":"455453859","mode":"id"},"dateRange":"custom","startDate":"={{$today.minus({days: 14})}}","endDate":"={{$today.minus({days: 7})}}","metricsGA4":{"metricValues":[{"listName":"other","name":"activeUsers"},{"listName":"other","name":"engagedSessions"},{"listName":"other","name":"engagementRate"},{"listName":"other","name":"eventCount"},{"listName":"other","name":"organicGoogleSearchAveragePosition"},{"listName":"other","name":"organicGoogleSearchClickThroughRate"},{"listName":"other","name":"organicGoogleSearchClicks"},{"listName":"other","name":"organicGoogleSearchImpressions"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"landingPagePlusQueryString"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"14fea93c-7d9c-4f58-96a3-b241f6b0bcec","name":"Get Google Search Results for prior week","type":"n8n-nodes-base.googleAnalytics","position":[4460,940],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"QNgzYDBNwqVS9ez3","name":"Google Analytics account 2"}},"disabled":true},{"parameters":{"propertyId":{"__rl":true,"value":"455453859","mode":"id"},"dateRange":"custom","startDate":"={{$today.minus({days: 14})}}","endDate":"={{$today.minus({days: 7})}}","metricsGA4":{"metricValues":[{"listName":"other","name":"activeUsers"},{"listName":"other","name":"newUsers"},{"listName":"other","name":"engagementRate"},{"listName":"other","name":"engagedSessions"},{"listName":"other","name":"eventCount"},{"listName":"other"},{"listName":"other","name":"sessions"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"country"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"436c7977-0214-4b23-924a-3915c0f27d28","name":"Get Country views data for prior week","type":"n8n-nodes-base.googleAnalytics","position":[5260,940],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"QNgzYDBNwqVS9ez3","name":"Google Analytics account 2"}},"disabled":true},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Debug logging\n    console.log('Input items:', JSON.stringify(items, null, 2));\n    \n    // Check if items is an array and has content\n    if (!Array.isArray(items) || items.length === 0) {\n        console.log('Items is not an array or is empty');\n        throw new Error('Invalid data structure');\n    }\n\n    // Check if first item exists and has json property\n    if (!items[0] || !items[0].json) {\n        console.log('First item is missing or has no json property');\n        throw new Error('Invalid data structure');\n    }\n\n    // Get the analytics data\n    const analyticsData = items[0].json;\n    \n    // Check if analyticsData has rows\n    if (!analyticsData || !Array.isArray(analyticsData.rows)) {\n        console.log('Analytics data is missing or has no rows array');\n        throw new Error('Invalid data structure');\n    }\n    \n    // Map each row to a simplified object\n    const simplified = analyticsData.rows.map(row => {\n        if (!row.dimensionValues?.[0]?.value || !row.metricValues?.length) {\n            console.log('Invalid row structure:', row);\n            throw new Error('Invalid row structure');\n        }\n        \n        return {\n            page: row.dimensionValues[0].value,\n            pageViews: parseInt(row.metricValues[0].value) || 0,\n            activeUsers: parseInt(row.metricValues[1].value) || 0,\n            viewsPerUser: parseFloat(row.metricValues[2].value) || 0,\n            eventCount: parseInt(row.metricValues[3].value) || 0\n        };\n    });\n    \n    // Convert to JSON string and encode for URL\n    return encodeURIComponent(JSON.stringify(simplified));\n}\n\n// Get input data and transform it\nconst urlString = transformToUrlString($input.all());\n\n// Return the result\nreturn { json: { urlString } };"},"id":"15f3edcb-2e31-4faa-8db2-62da69bbfe8d","name":"Parse - Get Page Engagement This Week","type":"n8n-nodes-base.code","position":[4660,740],"typeVersion":2,"disabled":true},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Debug logging\n    console.log('Input items:', JSON.stringify(items, null, 2));\n    \n    // Check if items is an array and has content\n    if (!Array.isArray(items) || items.length === 0) {\n        console.log('Items is not an array or is empty');\n        throw new Error('Invalid data structure');\n    }\n\n    // Check if first item exists and has json property\n    if (!items[0] || !items[0].json) {\n        console.log('First item is missing or has no json property');\n        throw new Error('Invalid data structure');\n    }\n\n    // Get the analytics data\n    const analyticsData = items[0].json;\n    \n    // Check if analyticsData has rows\n    if (!analyticsData || !Array.isArray(analyticsData.rows)) {\n        console.log('Analytics data is missing or has no rows array');\n        throw new Error('Invalid data structure');\n    }\n    \n    // Filter out invalid rows and map each valid row to a simplified object\n    const simplified = analyticsData.rows\n        .filter(row => {\n            // Check if row is valid and its properties exist\n            const isValid = row \n                && row.dimensionValues \n                && row.dimensionValues[0] \n                && row.dimensionValues[0].value \n                && row.metricValues \n                && row.metricValues.length > 0;\n            \n            if (!isValid) {\n                console.log('Ignoring invalid or null row:', row);\n            }\n            return isValid;\n        })\n        .map(row => ({\n            page: row.dimensionValues[0].value,\n            pageViews: parseInt(row.metricValues[0].value) || 0,\n            activeUsers: parseInt(row.metricValues[1]?.value) || 0,\n            viewsPerUser: parseFloat(row.metricValues[2]?.value) || 0,\n            eventCount: parseInt(row.metricValues[3]?.value) || 0\n        }));\n    \n    // Convert to JSON string and encode for URL\n    return encodeURIComponent(JSON.stringify(simplified));\n}\n\n// Get input data and transform it\nconst urlString = transformToUrlString($input.all());\n\n// Return the result\nreturn { json: { urlString } };\n"},"id":"46cd21cd-c7f4-45cb-a724-db8a122f9de3","name":"Parse - Get Page Engagement Prior Week","type":"n8n-nodes-base.code","position":[5060,740],"typeVersion":2,"disabled":true},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Check if items is an array and get the JSON property\n    const data = items[0]?.json;\n\n    if (!data || !Array.isArray(data.rows)) {\n        console.log('No valid data found');\n        return encodeURIComponent(JSON.stringify([]));\n    }\n\n    try {\n        // Process each row, skipping invalid or null entries\n        const simplified = data.rows\n            .filter(row => {\n                // Skip null rows or rows without dimensionValues or metricValues\n                const isValid = row && row.dimensionValues && Array.isArray(row.metricValues);\n                if (!isValid) {\n                    console.log('Skipping invalid row:', row);\n                }\n                return isValid;\n            })\n            .map(row => ({\n                page: row.dimensionValues[0]?.value || 'Unknown',\n                activeUsers: parseInt(row.metricValues[0]?.value) || 0,\n                engagedSessions: parseInt(row.metricValues[1]?.value) || 0,\n                engagementRate: parseFloat(row.metricValues[2]?.value) || 0.0,\n                eventCount: parseInt(row.metricValues[3]?.value) || 0,\n                avgPosition: parseFloat(row.metricValues[4]?.value) || 0.0,\n                ctr: parseFloat(row.metricValues[5]?.value) || 0.0,\n                clicks: parseInt(row.metricValues[6]?.value) || 0,\n                impressions: parseInt(row.metricValues[7]?.value) || 0\n            }));\n\n        // Encode the simplified data as a URL-safe string\n        return encodeURIComponent(JSON.stringify(simplified));\n    } catch (error) {\n        console.log('Error processing data:', error.message);\n        throw new Error('Invalid data structure');\n    }\n}\n\n// Get the input data\nconst items = $input.all();\n\n// Process the data\nconst result = transformToUrlString(items);\n\n// Return the result\nreturn { json: { urlString: result } };\n"},"id":"6bef6c5c-74a1-4566-8b8d-372414ae9b0d","name":"Parse - Get Google Search This Week","type":"n8n-nodes-base.code","position":[5460,740],"typeVersion":2,"disabled":true},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Ensure the input is valid and contains data\n    const data = items[0]?.json;\n\n    if (!data || !Array.isArray(data.rows)) {\n        console.log('No valid data found');\n        return encodeURIComponent(JSON.stringify([]));\n    }\n\n    try {\n        // Process each row, skipping null or invalid rows\n        const simplified = data.rows\n            .filter(row => {\n                // Skip null rows\n                const isValid = row && row.dimensionValues && Array.isArray(row.metricValues);\n                if (!isValid) {\n                    console.log('Skipping invalid or null row:', row);\n                }\n                return isValid;\n            })\n            .map(row => ({\n                page: row.dimensionValues[0]?.value || 'Unknown',\n                activeUsers: parseInt(row.metricValues[0]?.value) || 0,\n                engagedSessions: parseInt(row.metricValues[1]?.value) || 0,\n                engagementRate: parseFloat(row.metricValues[2]?.value) || 0.0,\n                eventCount: parseInt(row.metricValues[3]?.value) || 0,\n                avgPosition: parseFloat(row.metricValues[4]?.value) || 0.0,\n                ctr: parseFloat(row.metricValues[5]?.value) || 0.0,\n                clicks: parseInt(row.metricValues[6]?.value) || 0,\n                impressions: parseInt(row.metricValues[7]?.value) || 0\n            }));\n\n        // If no valid rows, return an empty array\n        if (simplified.length === 0) {\n            console.log('No valid rows to process');\n            return encodeURIComponent(JSON.stringify([]));\n        }\n\n        // Encode the simplified data as a URL-safe string\n        return encodeURIComponent(JSON.stringify(simplified));\n    } catch (error) {\n        console.log('Error processing data:', error.message);\n        throw new Error('Invalid data structure');\n    }\n}\n\n// Get the input data\nconst items = $input.all();\n\n// Process the data\nconst result = transformToUrlString(items);\n\n// Return the result\nreturn { json: { urlString: result } };\n"},"id":"d0c2b575-6bf0-40d7-80e9-c4f1702df7c8","name":"Parse - Get Google Search Prior Week","type":"n8n-nodes-base.code","position":[4660,940],"typeVersion":2,"disabled":true},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // In n8n, we need to check if items is an array and get the json property\n    const data = items[0].json;\n    \n    if (!data || !data.rows) {\n        console.log('No valid data found');\n        return encodeURIComponent(JSON.stringify([]));\n    }\n    \n    try {\n        // Process each row\n        const simplified = data.rows.map(row => ({\n            country: row.dimensionValues[0].value,\n            activeUsers: parseInt(row.metricValues[0].value) || 0,\n            newUsers: parseInt(row.metricValues[1].value) || 0,\n            engagementRate: parseFloat(row.metricValues[2].value) || 0,\n            engagedSessions: parseInt(row.metricValues[3].value) || 0,\n            eventCount: parseInt(row.metricValues[4].value) || 0,\n            totalUsers: parseInt(row.metricValues[5].value) || 0,\n            sessions: parseInt(row.metricValues[6].value) || 0\n        }));\n        \n        return encodeURIComponent(JSON.stringify(simplified));\n    } catch (error) {\n        console.log('Error processing data:', error);\n        throw new Error('Invalid data structure');\n    }\n}\n\n// Get the input data\nconst items = $input.all();\n\n// Process the data\nconst result = transformToUrlString(items);\n\n// Return the result\nreturn { json: { urlString: result } };"},"id":"1fca2a6c-1b60-4860-ad60-3e0696f2cb07","name":"Parse - Country Views This Week","type":"n8n-nodes-base.code","position":[5060,940],"typeVersion":2,"disabled":true},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Ensure the input is valid and contains data\n    const data = items[0]?.json;\n\n    if (!data || !Array.isArray(data.rows)) {\n        console.log('No valid data found');\n        return encodeURIComponent(JSON.stringify([]));\n    }\n\n    try {\n        // Process each row, skipping invalid or null rows\n        const simplified = data.rows\n            .filter(row => {\n                // Skip null rows or rows without required properties\n                const isValid = row && row.dimensionValues && Array.isArray(row.metricValues);\n                if (!isValid) {\n                    console.log('Skipping invalid or null row:', row);\n                }\n                return isValid;\n            })\n            .map(row => ({\n                country: row.dimensionValues[0]?.value || 'Unknown',\n                activeUsers: parseInt(row.metricValues[0]?.value) || 0,\n                newUsers: parseInt(row.metricValues[1]?.value) || 0,\n                engagementRate: parseFloat(row.metricValues[2]?.value) || 0.0,\n                engagedSessions: parseInt(row.metricValues[3]?.value) || 0,\n                eventCount: parseInt(row.metricValues[4]?.value) || 0,\n                totalUsers: parseInt(row.metricValues[5]?.value) || 0,\n                sessions: parseInt(row.metricValues[6]?.value) || 0\n            }));\n\n        // If no valid rows, return an empty array\n        if (simplified.length === 0) {\n            console.log('No valid rows to process');\n            return encodeURIComponent(JSON.stringify([]));\n        }\n\n        // Encode the simplified data as a URL-safe string\n        return encodeURIComponent(JSON.stringify(simplified));\n    } catch (error) {\n        console.log('Error processing data:', error.message);\n        throw new Error('Invalid data structure');\n    }\n}\n\n// Get the input data\nconst items = $input.all();\n\n// Process the data\nconst result = transformToUrlString(items);\n\n// Return the result\nreturn { json: { urlString: result } };\n"},"id":"23679bde-bf02-465a-a656-5eeea0e82f34","name":"Parse - Country Views Prior Week","type":"n8n-nodes-base.code","position":[5460,940],"typeVersion":2,"disabled":true},{"parameters":{"assignments":{"assignments":[{"id":"93efb02f-f2f2-4e52-aa7a-3ccd1fb171cc","name":"urlString1","type":"string","value":"={{ $('Parse - Get Page Engagement This Week').first().json.urlString }}"},{"id":"5dea3377-0af2-48da-8666-5ee9452e25c5","name":"urlString2","type":"string","value":"={{ $('Parse - Get Page Engagement Prior Week').first().json.urlString }}"},{"id":"c6aa5d4d-d1e5-4493-96fd-60b2298ff6da","name":"urlString3","type":"string","value":"={{ $('Parse - Get Google Search This Week').first().json.urlString }}"},{"id":"711cb4fa-3e8c-4ad6-9b25-e2447d7492d1","name":"urlString4","type":"string","value":"={{ $('Parse - Get Google Search Prior Week').first().json.urlString }}"},{"id":"775bc64a-7986-48fb-a36d-4101158b83f0","name":"urlString5","type":"string","value":"={{ $('Parse - Country Views This Week').first().json.urlString }}"},{"id":"a6ae27a0-89b5-4a6f-8328-327750835c8d","name":"urlString6","type":"string","value":"={{ $('Parse - Country Views Prior Week').first().json.urlString }}"}]},"options":{}},"id":"d6797f36-d715-4821-9747-cea5c87dc2cb","name":"Set urlStrings","type":"n8n-nodes-base.set","position":[4460,1140],"typeVersion":3.4,"disabled":true},{"parameters":{"jsCode":"const input = $input.first().json;\n\n// Extract data\nconst engagementStats = input.engagementStats || {};\nconst searchResults = input.searchResults || {};\nconst countryViews = input.countryViews || {};\n\n// Get today's date\nconst today = new Date();\nconst formattedDate = today.toLocaleDateString(undefined, {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n});\n\n// Helper function to format date in French timezone\nfunction formatFrenchTime() {\n    const now = new Date();\n    \n    // Format for France (Central European Time)\n    const frenchOptions = { timeZone: 'Europe/Paris' };\n    const frenchDate = now.toLocaleDateString('fr-FR', frenchOptions);\n    const frenchTime = now.toLocaleTimeString('fr-FR', frenchOptions);\n    \n    return `${frenchDate} ${frenchTime}`;\n}\n\n// Helper function to format date in Indian timezone\nfunction formatIndianTime() {\n    const now = new Date();\n    \n    // Format for India (Indian Standard Time)\n    const indianOptions = { timeZone: 'Asia/Kolkata' };\n    const indianDate = now.toLocaleDateString('en-IN', indianOptions);\n    const indianTime = now.toLocaleTimeString('en-IN', indianOptions);\n    \n    return `${indianDate} ${indianTime}`;\n}\n\n// Helper function to generate table rows\nfunction generateTableRows(data, rowGenerator) {\n    if (!data || !data.length) return '';\n    \n    let rows = '';\n    data.forEach(item => {\n        rows += rowGenerator(item);\n    });\n    \n    return rows;\n}\n\n// Define HTML template with enhanced styling\nconst htmlTemplate = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Google Analytics Report</title>\n    <style>\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            max-width: 900px;\n            margin: 0 auto;\n            padding: 20px;\n            background-color: #f5f7fa;\n        }\n        .container {\n            background-color: #ffffff;\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0,0,0,0.08);\n            padding: 30px;\n            border-top: 5px solid #3498db;\n        }\n        header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding-bottom: 20px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid #f0f2f5;\n        }\n        .header-content {\n            flex-grow: 1;\n            margin-right: 30px;\n        }\n        .timestamp {\n            background-color: #f8fafc;\n            padding: 8px 12px;\n            border-radius: 6px;\n            font-size: 14px;\n            color: #64748b;\n        }\n        .timestamp-container {\n            display: flex;\n            flex-direction: column;\n            gap: 5px;\n        }\n        h2 {\n            color: #1e3a8a;\n            margin-top: 30px;\n            margin-bottom: 15px;\n            font-size: 22px;\n            font-weight: 600;\n            border-left: 4px solid #3498db;\n            padding-left: 10px;\n        }\n        h3 {\n            color: #334155;\n            margin-top: 20px;\n            margin-bottom: 10px;\n            font-size: 18px;\n            font-weight: 500;\n        }\n        table {\n            width: 100%;\n            border-collapse: separate;\n            border-spacing: 0;\n            margin: 20px 0;\n            font-size: 14px;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n            border-radius: 8px;\n            overflow: hidden;\n        }\n        th, td {\n            padding: 12px 16px;\n            border: none;\n            border-bottom: 1px solid #e5e7eb;\n            text-align: left;\n        }\n        th {\n            background-color: #f1f5f9;\n            color: #334155;\n            font-weight: 600;\n            text-transform: uppercase;\n            font-size: 12px;\n            letter-spacing: 0.5px;\n        }\n        tr:last-child td {\n            border-bottom: none;\n        }\n        tr:nth-child(even) {\n            background-color: #fafbfc;\n        }\n        tr:hover {\n            background-color: #f1f5fb;\n        }\n        .engagement-table th {\n            border-top: 3px solid #4CAF50;\n        }\n        .search-table th {\n            border-top: 3px solid #2196F3;\n        }\n        .country-table th {\n            border-top: 3px solid #FF9800;\n        }\n        .footer {\n            margin-top: 30px;\n            text-align: center;\n            font-size: 14px;\n            color: #64748b;\n            padding-top: 20px;\n            border-top: 1px solid #e5e7eb;\n        }\n        .timestamp-label {\n            font-weight: 600;\n        }\n        .no-data {\n            padding: 20px;\n            text-align: center;\n            background-color: #f9fafb;\n            border-radius: 8px;\n            color: #64748b;\n            font-style: italic;\n        }\n        .numeric-cell {\n            font-family: 'Consolas', monospace;\n        }\n        .section-accent-engagement {\n            color: #4CAF50;\n        }\n        .section-accent-search {\n            color: #2196F3;\n        }\n        .section-accent-country {\n            color: #FF9800;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <header>\n            <div class=\"header-content\">\n                <h1>Google Analytics Report</h1>\n                <p>https://www.gmindia.tech/</p>\n            </div>\n            <div class=\"timestamp-container\">\n                <div class=\"timestamp\">\n                    <span class=\"timestamp-label\">ðŸ‡«ðŸ‡· France:</span> ${formatFrenchTime()} <br><br> <span class=\"timestamp-label\">ðŸ‡®ðŸ‡³ India:</span> ${formatIndianTime()}\n                </div>\n            </div>\n        </header>\n        \n        <!-- Engagement Stats Section -->\n        <h2><span class=\"section-accent-engagement\">Engagement Stats</span></h2>\n        \n        <h3>This Week</h3>\n        ${engagementStats.thisWeek && engagementStats.thisWeek.length ? `\n        <table class=\"engagement-table\">\n            <thead>\n                <tr>\n                    <th>Page</th>\n                    <th>Page Views</th>\n                    <th>Active Users</th>\n                    <th>Views per User</th>\n                    <th>Event Count</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${generateTableRows(engagementStats.thisWeek, (stat) => `\n                <tr>\n                    <td>${stat.page}</td>\n                    <td class=\"numeric-cell\">${stat.pageViews}</td>\n                    <td class=\"numeric-cell\">${stat.activeUsers}</td>\n                    <td class=\"numeric-cell\">${stat.viewsPerUser.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${stat.eventCount}</td>\n                </tr>\n                `)}\n            </tbody>\n        </table>\n        ` : `<div class=\"no-data\">No data available for this week.</div>`}\n        \n        <h3>Prior Week</h3>\n        ${engagementStats.priorWeek && engagementStats.priorWeek.length ? `\n        <table class=\"engagement-table\">\n            <thead>\n                <tr>\n                    <th>Page</th>\n                    <th>Page Views</th>\n                    <th>Active Users</th>\n                    <th>Views per User</th>\n                    <th>Event Count</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${generateTableRows(engagementStats.priorWeek, (stat) => `\n                <tr>\n                    <td>${stat.page}</td>\n                    <td class=\"numeric-cell\">${stat.pageViews}</td>\n                    <td class=\"numeric-cell\">${stat.activeUsers}</td>\n                    <td class=\"numeric-cell\">${stat.viewsPerUser.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${stat.eventCount}</td>\n                </tr>\n                `)}\n            </tbody>\n        </table>\n        ` : `<div class=\"no-data\">No data available for prior week.</div>`}\n        \n        <!-- Search Results Section -->\n        <h2><span class=\"section-accent-search\">Search Results</span></h2>\n        \n        <h3>This Week</h3>\n        ${searchResults.thisWeek && searchResults.thisWeek.length ? `\n        <table class=\"search-table\">\n            <thead>\n                <tr>\n                    <th>Page</th>\n                    <th>Active Users</th>\n                    <th>Engaged Sessions</th>\n                    <th>Engagement Rate</th>\n                    <th>Event Count</th>\n                    <th>Avg Position</th>\n                    <th>CTR</th>\n                    <th>Clicks</th>\n                    <th>Impressions</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${generateTableRows(searchResults.thisWeek, (result) => `\n                <tr>\n                    <td>${result.page}</td>\n                    <td class=\"numeric-cell\">${result.activeUsers}</td>\n                    <td class=\"numeric-cell\">${result.engagedSessions}</td>\n                    <td class=\"numeric-cell\">${result.engagementRate.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${result.eventCount}</td>\n                    <td class=\"numeric-cell\">${result.avgPosition.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${result.ctr.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${result.clicks}</td>\n                    <td class=\"numeric-cell\">${result.impressions}</td>\n                </tr>\n                `)}\n            </tbody>\n        </table>\n        ` : `<div class=\"no-data\">No data available for this week.</div>`}\n        \n        <h3>Last Week</h3>\n        ${searchResults.lastWeek && searchResults.lastWeek.length ? `\n        <table class=\"search-table\">\n            <thead>\n                <tr>\n                    <th>Page</th>\n                    <th>Active Users</th>\n                    <th>Engaged Sessions</th>\n                    <th>Engagement Rate</th>\n                    <th>Event Count</th>\n                    <th>Avg Position</th>\n                    <th>CTR</th>\n                    <th>Clicks</th>\n                    <th>Impressions</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${generateTableRows(searchResults.lastWeek, (result) => `\n                <tr>\n                    <td>${result.page}</td>\n                    <td class=\"numeric-cell\">${result.activeUsers}</td>\n                    <td class=\"numeric-cell\">${result.engagedSessions}</td>\n                    <td class=\"numeric-cell\">${result.engagementRate.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${result.eventCount}</td>\n                    <td class=\"numeric-cell\">${result.avgPosition.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${result.ctr.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${result.clicks}</td>\n                    <td class=\"numeric-cell\">${result.impressions}</td>\n                </tr>\n                `)}\n            </tbody>\n        </table>\n        ` : `<div class=\"no-data\">No data available for last week.</div>`}\n        \n        <!-- Country Views Section -->\n        <h2><span class=\"section-accent-country\">Country Views</span></h2>\n        \n        <h3>This Week</h3>\n        ${countryViews.thisWeek && countryViews.thisWeek.length ? `\n        <table class=\"country-table\">\n            <thead>\n                <tr>\n                    <th>Country</th>\n                    <th>Active Users</th>\n                    <th>New Users</th>\n                    <th>Engagement Rate</th>\n                    <th>Engaged Sessions</th>\n                    <th>Event Count</th>\n                    <th>Total Users</th>\n                    <th>Sessions</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${generateTableRows(countryViews.thisWeek, (view) => `\n                <tr>\n                    <td>${view.country}</td>\n                    <td class=\"numeric-cell\">${view.activeUsers}</td>\n                    <td class=\"numeric-cell\">${view.newUsers}</td>\n                    <td class=\"numeric-cell\">${view.engagementRate.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${view.engagedSessions}</td>\n                    <td class=\"numeric-cell\">${view.eventCount}</td>\n                    <td class=\"numeric-cell\">${view.totalUsers}</td>\n                    <td class=\"numeric-cell\">${view.sessions}</td>\n                </tr>\n                `)}\n            </tbody>\n        </table>\n        ` : `<div class=\"no-data\">No data available for this week.</div>`}\n        \n        <h3>Last Week</h3>\n        ${countryViews.lastWeek && countryViews.lastWeek.length ? `\n        <table class=\"country-table\">\n            <thead>\n                <tr>\n                    <th>Country</th>\n                    <th>Active Users</th>\n                    <th>New Users</th>\n                    <th>Engagement Rate</th>\n                    <th>Engaged Sessions</th>\n                    <th>Event Count</th>\n                    <th>Total Users</th>\n                    <th>Sessions</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${generateTableRows(countryViews.lastWeek, (view) => `\n                <tr>\n                    <td>${view.country}</td>\n                    <td class=\"numeric-cell\">${view.activeUsers}</td>\n                    <td class=\"numeric-cell\">${view.newUsers}</td>\n                    <td class=\"numeric-cell\">${view.engagementRate.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${view.engagedSessions}</td>\n                    <td class=\"numeric-cell\">${view.eventCount}</td>\n                    <td class=\"numeric-cell\">${view.totalUsers}</td>\n                    <td class=\"numeric-cell\">${view.sessions}</td>\n                </tr>\n                `)}\n            </tbody>\n        </table>\n        ` : `<div class=\"no-data\">No data available for last week.</div>`}\n        \n        <div class=\"footer\">\n            <p>This is an automated analytics report generated on:</p>\n            <p>ðŸ‡«ðŸ‡· France: ${formatFrenchTime()} | ðŸ‡®ðŸ‡³ India: ${formatIndianTime()}</p>\n        </div>\n    </div>\n</body>\n</html>\n`;\n\n// Output the title and formatted HTML\nreturn {\n    json: {\n        title: `GA Weekly Report ${formattedDate}`,\n        htmlContent: htmlTemplate\n    }\n};"},"id":"5990f2af-1fc4-4ed5-aea6-c46bebb463a8","name":"Format Data","type":"n8n-nodes-base.code","position":[4460,1480],"typeVersion":2,"disabled":true},{"parameters":{"jsCode":"console.log($input.all());\nreturn $input.all();\n"},"id":"74ad1eef-3a5b-4939-83ee-be0c4b6c13cb","name":"Input All","type":"n8n-nodes-base.code","position":[4860,1140],"typeVersion":2,"disabled":true},{"parameters":{"content":"## Format the data and Email","height":295.7350020039967,"width":1264.897623827279,"color":5},"id":"019a40de-80c8-4ede-a86b-babb2c6288eb","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[4380,1380],"typeVersion":1,"disabled":true},{"parameters":{"sendTo":"m.jasim@gmindia.tech","subject":"=https://www.gmindia.tech/ {{ $json.title }}","message":"={{ $json.htmlContent }}","options":{"appendAttribution":"={{ false }}","senderName":"GMIndia Website Weekly GA Report"}},"id":"f81326ce-ac35-4463-8444-e9c2b7be027b","name":"Email the Report","type":"n8n-nodes-base.gmail","position":[4660,1480],"webhookId":"80d4d964-449a-4599-b2de-bca9c8822bbd","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"CTQPBdqXhtBIuuJt","name":"Gmail account 5"}},"disabled":true},{"parameters":{"rule":{"interval":[{"field":"weeks","triggerAtDay":[1],"triggerAtHour":9}]}},"id":"9358a6bc-3696-4647-b02d-891c597d1cb6","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[1900,660],"typeVersion":1.2},{"parameters":{"propertyId":{"__rl":true,"value":"={{ $json['Property ID'] }}","mode":"id"},"metricsGA4":{"metricValues":[{"listName":"other","name":"screenPageViews"},{"listName":"other","name":"activeUsers"},{"listName":"other","name":"screenPageViewsPerUser"},{"listName":"other","name":"eventCount"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"unifiedScreenName"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"c727f782-c076-4923-9da6-71174cd0243d","name":"Get Page Engagement Stats for this week1","type":"n8n-nodes-base.googleAnalytics","position":[2680,660],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"QNgzYDBNwqVS9ez3","name":"Google Analytics account 2"}}},{"parameters":{"propertyId":{"__rl":true,"value":"={{ $('If empty').item.json['Property ID'] }}","mode":"id"},"dateRange":"custom","startDate":"={{$today.minus({days: 14})}}","endDate":"={{$today.minus({days: 7})}}","metricsGA4":{"metricValues":[{"listName":"other","name":"screenPageViews"},{"listName":"other","name":"activeUsers"},{"listName":"other","name":"screenPageViewsPerUser"},{"listName":"other","name":"eventCount"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"unifiedScreenName"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"3aeaa7c4-920e-4c92-81d6-4a9cedf8f18a","name":"Get Page Engagement Stats for prior week1","type":"n8n-nodes-base.googleAnalytics","position":[3080,660],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"QNgzYDBNwqVS9ez3","name":"Google Analytics account 2"}}},{"parameters":{"propertyId":{"__rl":true,"value":"={{ $('If empty').item.json['Property ID'] }}","mode":"id"},"metricsGA4":{"metricValues":[{"listName":"other","name":"activeUsers"},{"listName":"other","name":"engagedSessions"},{"listName":"other","name":"engagementRate"},{"listName":"other","name":"eventCount"},{"listName":"other","name":"organicGoogleSearchAveragePosition"},{"listName":"other","name":"organicGoogleSearchClickThroughRate"},{"listName":"other","name":"organicGoogleSearchClicks"},{"listName":"other","name":"organicGoogleSearchImpressions"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"landingPagePlusQueryString"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"cbefb28a-0a82-44ee-a41c-a1264674a080","name":"Get Google Search Results for this week1","type":"n8n-nodes-base.googleAnalytics","position":[3480,660],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"QNgzYDBNwqVS9ez3","name":"Google Analytics account 2"}}},{"parameters":{"propertyId":{"__rl":true,"value":"={{ $('If empty').item.json['Property ID'] }}","mode":"id"},"metricsGA4":{"metricValues":[{"listName":"other","name":"=activeUsers"},{"listName":"other","name":"=newUsers"},{"listName":"other","name":"=engagementRate"},{"listName":"other","name":"engagedSessions"},{"listName":"other","name":"=eventCount"},{"listName":"other","name":"=totalUsers"},{"listName":"other","name":"=sessions"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"=country"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"9a73c446-cf9b-41d2-bf1f-d4346db7d107","name":"Get Country views data for this week1","type":"n8n-nodes-base.googleAnalytics","position":[3080,860],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"QNgzYDBNwqVS9ez3","name":"Google Analytics account 2"}}},{"parameters":{"jsCode":"// Helper function to decode and parse a URL-encoded JSON string\nfunction decodeUrlString(urlString) {\n    try {\n        const decoded = JSON.parse(decodeURIComponent(urlString));\n        console.log('Decoded URL string:', JSON.stringify(decoded, null, 2));\n        return decoded;\n    } catch (error) {\n        console.log('Error decoding URL string:', error.message);\n        return [];\n    }\n}\n\n// Main function to aggregate data\nfunction aggregateData(items) {\n    // Extract each urlString from the input\n    const data = items[0]?.json; // Get the first JSON object from input\n\n    if (!data) {\n        console.log('No data found in input items.');\n        return {};\n    }\n\n    // Decode each urlString\n    const engagementStatsThisWeek = decodeUrlString(data.urlString1 || '');\n    const engagementStatsPriorWeek = decodeUrlString(data.urlString2 || '');\n    const searchResultsThisWeek = decodeUrlString(data.urlString3 || '');\n    const searchResultsLastWeek = decodeUrlString(data.urlString4 || '');\n    const countryViewsThisWeek = decodeUrlString(data.urlString5 || '');\n    const countryViewsLastWeek = decodeUrlString(data.urlString6 || '');\n\n    // Aggregate the decoded data into a structured object\n    const aggregatedData = {\n        engagementStats: {\n            thisWeek: engagementStatsThisWeek,\n            priorWeek: engagementStatsPriorWeek,\n        },\n        searchResults: {\n            thisWeek: searchResultsThisWeek,\n            lastWeek: searchResultsLastWeek,\n        },\n        countryViews: {\n            thisWeek: countryViewsThisWeek,\n            lastWeek: countryViewsLastWeek,\n        },\n    };\n\n    console.log('Final Aggregated Data:', JSON.stringify(aggregatedData, null, 2));\n    return aggregatedData;\n}\n\n// Get input data from all nodes\nconst items = $input.all();\nconsole.log('Input items to Aggregate Data:', JSON.stringify(items, null, 2));\n\n// Perform aggregation\nconst aggregatedResult = aggregateData(items);\n\n// Output the aggregated result for downstream processing\nreturn { json: aggregatedResult };\n"},"id":"a1e9a119-1abe-44e9-bebe-ee44d01206e4","name":"Aggregate Data1","type":"n8n-nodes-base.code","position":[2880,1060],"typeVersion":2},{"parameters":{"propertyId":{"__rl":true,"value":"={{ $('If empty').item.json['Property ID'] }}","mode":"id"},"dateRange":"custom","startDate":"={{$today.minus({days: 14})}}","endDate":"={{$today.minus({days: 7})}}","metricsGA4":{"metricValues":[{"listName":"other","name":"activeUsers"},{"listName":"other","name":"engagedSessions"},{"listName":"other","name":"engagementRate"},{"listName":"other","name":"eventCount"},{"listName":"other","name":"organicGoogleSearchAveragePosition"},{"listName":"other","name":"organicGoogleSearchClickThroughRate"},{"listName":"other","name":"organicGoogleSearchClicks"},{"listName":"other","name":"organicGoogleSearchImpressions"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"landingPagePlusQueryString"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"570317d5-5ae8-4e7c-88c1-839e2aedbe34","name":"Get Google Search Results for prior week1","type":"n8n-nodes-base.googleAnalytics","position":[2680,860],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"QNgzYDBNwqVS9ez3","name":"Google Analytics account 2"}}},{"parameters":{"propertyId":{"__rl":true,"value":"={{ $('If empty').item.json['Property ID'] }}","mode":"id"},"dateRange":"custom","startDate":"={{$today.minus({days: 14})}}","endDate":"={{$today.minus({days: 7})}}","metricsGA4":{"metricValues":[{"listName":"other","name":"activeUsers"},{"listName":"other","name":"newUsers"},{"listName":"other","name":"engagementRate"},{"listName":"other","name":"engagedSessions"},{"listName":"other","name":"eventCount"},{"listName":"other"},{"listName":"other","name":"sessions"}]},"dimensionsGA4":{"dimensionValues":[{"listName":"other","name":"country"}]},"returnAll":true,"simple":false,"additionalFields":{"keepEmptyRows":true}},"id":"5ea79cd2-a410-4e53-b917-dddff130ad61","name":"Get Country views data for prior week1","type":"n8n-nodes-base.googleAnalytics","position":[3480,860],"typeVersion":2,"credentials":{"googleAnalyticsOAuth2":{"id":"QNgzYDBNwqVS9ez3","name":"Google Analytics account 2"}}},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Debug logging\n    console.log('Input items:', JSON.stringify(items, null, 2));\n    \n    // Check if items is an array and has content\n    if (!Array.isArray(items) || items.length === 0) {\n        console.log('Items is not an array or is empty');\n        throw new Error('Invalid data structure');\n    }\n\n    // Check if first item exists and has json property\n    if (!items[0] || !items[0].json) {\n        console.log('First item is missing or has no json property');\n        throw new Error('Invalid data structure');\n    }\n\n    // Get the analytics data\n    const analyticsData = items[0].json;\n    \n    // Check if analyticsData has rows\n    if (!analyticsData || !Array.isArray(analyticsData.rows)) {\n        console.log('Analytics data is missing or has no rows array');\n        throw new Error('Invalid data structure');\n    }\n    \n    // Map each row to a simplified object\n    const simplified = analyticsData.rows.map(row => {\n        if (!row.dimensionValues?.[0]?.value || !row.metricValues?.length) {\n            console.log('Invalid row structure:', row);\n            throw new Error('Invalid row structure');\n        }\n        \n        return {\n            page: row.dimensionValues[0].value,\n            pageViews: parseInt(row.metricValues[0].value) || 0,\n            activeUsers: parseInt(row.metricValues[1].value) || 0,\n            viewsPerUser: parseFloat(row.metricValues[2].value) || 0,\n            eventCount: parseInt(row.metricValues[3].value) || 0\n        };\n    });\n    \n    // Convert to JSON string and encode for URL\n    return encodeURIComponent(JSON.stringify(simplified));\n}\n\n// Get input data and transform it\nconst urlString = transformToUrlString($input.all());\n\n// Return the result\nreturn { json: { urlString } };"},"id":"0788432d-818a-463f-a138-52304e00ed5f","name":"Parse - Get Page Engagement This Week1","type":"n8n-nodes-base.code","position":[2880,660],"typeVersion":2},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Debug logging\n    console.log('Input items:', JSON.stringify(items, null, 2));\n    \n    // Check if items is an array and has content\n    if (!Array.isArray(items) || items.length === 0) {\n        console.log('Items is not an array or is empty');\n        throw new Error('Invalid data structure');\n    }\n\n    // Check if first item exists and has json property\n    if (!items[0] || !items[0].json) {\n        console.log('First item is missing or has no json property');\n        throw new Error('Invalid data structure');\n    }\n\n    // Get the analytics data\n    const analyticsData = items[0].json;\n    \n    // Check if analyticsData has rows\n    if (!analyticsData || !Array.isArray(analyticsData.rows)) {\n        console.log('Analytics data is missing or has no rows array');\n        throw new Error('Invalid data structure');\n    }\n    \n    // Filter out invalid rows and map each valid row to a simplified object\n    const simplified = analyticsData.rows\n        .filter(row => {\n            // Check if row is valid and its properties exist\n            const isValid = row \n                && row.dimensionValues \n                && row.dimensionValues[0] \n                && row.dimensionValues[0].value \n                && row.metricValues \n                && row.metricValues.length > 0;\n            \n            if (!isValid) {\n                console.log('Ignoring invalid or null row:', row);\n            }\n            return isValid;\n        })\n        .map(row => ({\n            page: row.dimensionValues[0].value,\n            pageViews: parseInt(row.metricValues[0].value) || 0,\n            activeUsers: parseInt(row.metricValues[1]?.value) || 0,\n            viewsPerUser: parseFloat(row.metricValues[2]?.value) || 0,\n            eventCount: parseInt(row.metricValues[3]?.value) || 0\n        }));\n    \n    // Convert to JSON string and encode for URL\n    return encodeURIComponent(JSON.stringify(simplified));\n}\n\n// Get input data and transform it\nconst urlString = transformToUrlString($input.all());\n\n// Return the result\nreturn { json: { urlString } };\n"},"id":"0e4e22f1-5162-437e-b3ac-677516b9bb2c","name":"Parse - Get Page Engagement Prior Week1","type":"n8n-nodes-base.code","position":[3280,660],"typeVersion":2},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Check if items is an array and get the JSON property\n    const data = items[0]?.json;\n\n    if (!data || !Array.isArray(data.rows)) {\n        console.log('No valid data found');\n        return encodeURIComponent(JSON.stringify([]));\n    }\n\n    try {\n        // Process each row, skipping invalid or null entries\n        const simplified = data.rows\n            .filter(row => {\n                // Skip null rows or rows without dimensionValues or metricValues\n                const isValid = row && row.dimensionValues && Array.isArray(row.metricValues);\n                if (!isValid) {\n                    console.log('Skipping invalid row:', row);\n                }\n                return isValid;\n            })\n            .map(row => ({\n                page: row.dimensionValues[0]?.value || 'Unknown',\n                activeUsers: parseInt(row.metricValues[0]?.value) || 0,\n                engagedSessions: parseInt(row.metricValues[1]?.value) || 0,\n                engagementRate: parseFloat(row.metricValues[2]?.value) || 0.0,\n                eventCount: parseInt(row.metricValues[3]?.value) || 0,\n                avgPosition: parseFloat(row.metricValues[4]?.value) || 0.0,\n                ctr: parseFloat(row.metricValues[5]?.value) || 0.0,\n                clicks: parseInt(row.metricValues[6]?.value) || 0,\n                impressions: parseInt(row.metricValues[7]?.value) || 0\n            }));\n\n        // Encode the simplified data as a URL-safe string\n        return encodeURIComponent(JSON.stringify(simplified));\n    } catch (error) {\n        console.log('Error processing data:', error.message);\n        throw new Error('Invalid data structure');\n    }\n}\n\n// Get the input data\nconst items = $input.all();\n\n// Process the data\nconst result = transformToUrlString(items);\n\n// Return the result\nreturn { json: { urlString: result } };\n"},"id":"4c84b25e-0dc8-45bd-b7bb-bb5b5fa59241","name":"Parse - Get Google Search This Week1","type":"n8n-nodes-base.code","position":[3680,660],"typeVersion":2},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Ensure the input is valid and contains data\n    const data = items[0]?.json;\n\n    if (!data || !Array.isArray(data.rows)) {\n        console.log('No valid data found');\n        return encodeURIComponent(JSON.stringify([]));\n    }\n\n    try {\n        // Process each row, skipping null or invalid rows\n        const simplified = data.rows\n            .filter(row => {\n                // Skip null rows\n                const isValid = row && row.dimensionValues && Array.isArray(row.metricValues);\n                if (!isValid) {\n                    console.log('Skipping invalid or null row:', row);\n                }\n                return isValid;\n            })\n            .map(row => ({\n                page: row.dimensionValues[0]?.value || 'Unknown',\n                activeUsers: parseInt(row.metricValues[0]?.value) || 0,\n                engagedSessions: parseInt(row.metricValues[1]?.value) || 0,\n                engagementRate: parseFloat(row.metricValues[2]?.value) || 0.0,\n                eventCount: parseInt(row.metricValues[3]?.value) || 0,\n                avgPosition: parseFloat(row.metricValues[4]?.value) || 0.0,\n                ctr: parseFloat(row.metricValues[5]?.value) || 0.0,\n                clicks: parseInt(row.metricValues[6]?.value) || 0,\n                impressions: parseInt(row.metricValues[7]?.value) || 0\n            }));\n\n        // If no valid rows, return an empty array\n        if (simplified.length === 0) {\n            console.log('No valid rows to process');\n            return encodeURIComponent(JSON.stringify([]));\n        }\n\n        // Encode the simplified data as a URL-safe string\n        return encodeURIComponent(JSON.stringify(simplified));\n    } catch (error) {\n        console.log('Error processing data:', error.message);\n        throw new Error('Invalid data structure');\n    }\n}\n\n// Get the input data\nconst items = $input.all();\n\n// Process the data\nconst result = transformToUrlString(items);\n\n// Return the result\nreturn { json: { urlString: result } };\n"},"id":"5778ebd5-9cd7-4fce-ab3f-35dd961eaf3b","name":"Parse - Get Google Search Prior Week1","type":"n8n-nodes-base.code","position":[2880,860],"typeVersion":2},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // In n8n, we need to check if items is an array and get the json property\n    const data = items[0].json;\n    \n    if (!data || !data.rows) {\n        console.log('No valid data found');\n        return encodeURIComponent(JSON.stringify([]));\n    }\n    \n    try {\n        // Process each row\n        const simplified = data.rows.map(row => ({\n            country: row.dimensionValues[0].value,\n            activeUsers: parseInt(row.metricValues[0].value) || 0,\n            newUsers: parseInt(row.metricValues[1].value) || 0,\n            engagementRate: parseFloat(row.metricValues[2].value) || 0,\n            engagedSessions: parseInt(row.metricValues[3].value) || 0,\n            eventCount: parseInt(row.metricValues[4].value) || 0,\n            totalUsers: parseInt(row.metricValues[5].value) || 0,\n            sessions: parseInt(row.metricValues[6].value) || 0\n        }));\n        \n        return encodeURIComponent(JSON.stringify(simplified));\n    } catch (error) {\n        console.log('Error processing data:', error);\n        throw new Error('Invalid data structure');\n    }\n}\n\n// Get the input data\nconst items = $input.all();\n\n// Process the data\nconst result = transformToUrlString(items);\n\n// Return the result\nreturn { json: { urlString: result } };"},"id":"4e7450c6-64d2-48d2-9c4b-0bbe3397a97d","name":"Parse - Country Views This Week1","type":"n8n-nodes-base.code","position":[3280,860],"typeVersion":2},{"parameters":{"jsCode":"function transformToUrlString(items) {\n    // Ensure the input is valid and contains data\n    const data = items[0]?.json;\n\n    if (!data || !Array.isArray(data.rows)) {\n        console.log('No valid data found');\n        return encodeURIComponent(JSON.stringify([]));\n    }\n\n    try {\n        // Process each row, skipping invalid or null rows\n        const simplified = data.rows\n            .filter(row => {\n                // Skip null rows or rows without required properties\n                const isValid = row && row.dimensionValues && Array.isArray(row.metricValues);\n                if (!isValid) {\n                    console.log('Skipping invalid or null row:', row);\n                }\n                return isValid;\n            })\n            .map(row => ({\n                country: row.dimensionValues[0]?.value || 'Unknown',\n                activeUsers: parseInt(row.metricValues[0]?.value) || 0,\n                newUsers: parseInt(row.metricValues[1]?.value) || 0,\n                engagementRate: parseFloat(row.metricValues[2]?.value) || 0.0,\n                engagedSessions: parseInt(row.metricValues[3]?.value) || 0,\n                eventCount: parseInt(row.metricValues[4]?.value) || 0,\n                totalUsers: parseInt(row.metricValues[5]?.value) || 0,\n                sessions: parseInt(row.metricValues[6]?.value) || 0\n            }));\n\n        // If no valid rows, return an empty array\n        if (simplified.length === 0) {\n            console.log('No valid rows to process');\n            return encodeURIComponent(JSON.stringify([]));\n        }\n\n        // Encode the simplified data as a URL-safe string\n        return encodeURIComponent(JSON.stringify(simplified));\n    } catch (error) {\n        console.log('Error processing data:', error.message);\n        throw new Error('Invalid data structure');\n    }\n}\n\n// Get the input data\nconst items = $input.all();\n\n// Process the data\nconst result = transformToUrlString(items);\n\n// Return the result\nreturn { json: { urlString: result } };\n"},"id":"00316387-eaf6-4cf6-a17e-0482c0e892eb","name":"Parse - Country Views Prior Week1","type":"n8n-nodes-base.code","position":[3680,860],"typeVersion":2},{"parameters":{"assignments":{"assignments":[{"id":"93efb02f-f2f2-4e52-aa7a-3ccd1fb171cc","name":"urlString1","type":"string","value":"={{ $('Parse - Get Page Engagement This Week1').first().json.urlString }}"},{"id":"5dea3377-0af2-48da-8666-5ee9452e25c5","name":"urlString2","type":"string","value":"={{ $('Parse - Get Page Engagement Prior Week1').first().json.urlString }}"},{"id":"c6aa5d4d-d1e5-4493-96fd-60b2298ff6da","name":"urlString3","type":"string","value":"={{ $('Parse - Get Google Search This Week1').first().json.urlString }}"},{"id":"711cb4fa-3e8c-4ad6-9b25-e2447d7492d1","name":"urlString4","type":"string","value":"={{ $('Parse - Get Google Search Prior Week1').first().json.urlString }}"},{"id":"775bc64a-7986-48fb-a36d-4101158b83f0","name":"urlString5","type":"string","value":"={{ $('Parse - Country Views This Week1').first().json.urlString }}"},{"id":"a6ae27a0-89b5-4a6f-8328-327750835c8d","name":"urlString6","type":"string","value":"={{ $('Parse - Country Views Prior Week1').first().json.urlString }}"}]},"options":{}},"id":"89891ff5-44a0-4e7c-a174-000ae2dabfd9","name":"Set urlStrings1","type":"n8n-nodes-base.set","position":[2680,1060],"typeVersion":3.4},{"parameters":{"jsCode":"const input = $input.first().json;\n\n// Extract data\nconst engagementStats = input.engagementStats || {};\nconst searchResults = input.searchResults || {};\nconst countryViews = input.countryViews || {};\n\n// Get today's date\nconst today = new Date();\nconst formattedDate = today.toLocaleDateString(undefined, {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n});\n\n// Helper function to format date in French timezone\nfunction formatFrenchTime() {\n    const now = new Date();\n    \n    // Format for France (Central European Time)\n    const frenchOptions = { timeZone: 'Europe/Paris' };\n    const frenchDate = now.toLocaleDateString('fr-FR', frenchOptions);\n    const frenchTime = now.toLocaleTimeString('fr-FR', frenchOptions);\n    \n    return `${frenchDate} ${frenchTime}`;\n}\n\n// Helper function to format date in Indian timezone\nfunction formatIndianTime() {\n    const now = new Date();\n    \n    // Format for India (Indian Standard Time)\n    const indianOptions = { timeZone: 'Asia/Kolkata' };\n    const indianDate = now.toLocaleDateString('en-IN', indianOptions);\n    const indianTime = now.toLocaleTimeString('en-IN', indianOptions);\n    \n    return `${indianDate} ${indianTime}`;\n}\n\n// Helper function to generate table rows\nfunction generateTableRows(data, rowGenerator) {\n    if (!data || !data.length) return '';\n    \n    let rows = '';\n    data.forEach(item => {\n        rows += rowGenerator(item);\n    });\n    \n    return rows;\n}\n\nconst websiteLink = $('If empty').first().json[\"Website Link\"] || 'No website link available';\n\n// Define HTML template with enhanced styling\nconst htmlTemplate = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Google Analytics Report</title>\n    <style>\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            max-width: 900px;\n            margin: 0 auto;\n            padding: 20px;\n            background-color: #f5f7fa;\n        }\n        .container {\n            background-color: #ffffff;\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0,0,0,0.08);\n            padding: 30px;\n            border-top: 5px solid #3498db;\n        }\n        header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding-bottom: 20px;\n            margin-bottom: 25px;\n            border-bottom: 2px solid #f0f2f5;\n        }\n        .header-content {\n            flex-grow: 1;\n            margin-right: 30px;\n        }\n        .timestamp {\n            background-color: #f8fafc;\n            padding: 8px 12px;\n            border-radius: 6px;\n            font-size: 14px;\n            color: #64748b;\n        }\n        .timestamp-container {\n            display: flex;\n            flex-direction: column;\n            gap: 5px;\n        }\n        h2 {\n            color: #1e3a8a;\n            margin-top: 30px;\n            margin-bottom: 15px;\n            font-size: 22px;\n            font-weight: 600;\n            border-left: 4px solid #3498db;\n            padding-left: 10px;\n        }\n        h3 {\n            color: #334155;\n            margin-top: 20px;\n            margin-bottom: 10px;\n            font-size: 18px;\n            font-weight: 500;\n        }\n        table {\n            width: 100%;\n            border-collapse: separate;\n            border-spacing: 0;\n            margin: 20px 0;\n            font-size: 14px;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n            border-radius: 8px;\n            overflow: hidden;\n        }\n        th, td {\n            padding: 12px 16px;\n            border: none;\n            border-bottom: 1px solid #e5e7eb;\n            text-align: left;\n        }\n        th {\n            background-color: #f1f5f9;\n            color: #334155;\n            font-weight: 600;\n            text-transform: uppercase;\n            font-size: 12px;\n            letter-spacing: 0.5px;\n        }\n        tr:last-child td {\n            border-bottom: none;\n        }\n        tr:nth-child(even) {\n            background-color: #fafbfc;\n        }\n        tr:hover {\n            background-color: #f1f5fb;\n        }\n        .engagement-table th {\n            border-top: 3px solid #4CAF50;\n        }\n        .search-table th {\n            border-top: 3px solid #2196F3;\n        }\n        .country-table th {\n            border-top: 3px solid #FF9800;\n        }\n        .footer {\n            margin-top: 30px;\n            text-align: center;\n            font-size: 14px;\n            color: #64748b;\n            padding-top: 20px;\n            border-top: 1px solid #e5e7eb;\n        }\n        .timestamp-label {\n            font-weight: 600;\n        }\n        .no-data {\n            padding: 20px;\n            text-align: center;\n            background-color: #f9fafb;\n            border-radius: 8px;\n            color: #64748b;\n            font-style: italic;\n        }\n        .numeric-cell {\n            font-family: 'Consolas', monospace;\n        }\n        .section-accent-engagement {\n            color: #4CAF50;\n        }\n        .section-accent-search {\n            color: #2196F3;\n        }\n        .section-accent-country {\n            color: #FF9800;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <header>\n            <div class=\"header-content\">\n                <h1>Google Analytics Report</h1>\n              <p>${websiteLink}</p>\n            </div>\n            <div class=\"timestamp-container\">\n                <div class=\"timestamp\">\n                    <span class=\"timestamp-label\">ðŸ‡«ðŸ‡· France:</span> ${formatFrenchTime()} <br><br> <span class=\"timestamp-label\">ðŸ‡®ðŸ‡³ India:</span> ${formatIndianTime()}\n                </div>\n            </div>\n        </header>\n        \n        <!-- Engagement Stats Section -->\n        <h2><span class=\"section-accent-engagement\">Engagement Stats</span></h2>\n        \n        <h3>This Week</h3>\n        ${engagementStats.thisWeek && engagementStats.thisWeek.length ? `\n        <table class=\"engagement-table\">\n            <thead>\n                <tr>\n                    <th>Page</th>\n                    <th>Page Views</th>\n                    <th>Active Users</th>\n                    <th>Views per User</th>\n                    <th>Event Count</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${generateTableRows(engagementStats.thisWeek, (stat) => `\n                <tr>\n                    <td>${stat.page}</td>\n                    <td class=\"numeric-cell\">${stat.pageViews}</td>\n                    <td class=\"numeric-cell\">${stat.activeUsers}</td>\n                    <td class=\"numeric-cell\">${stat.viewsPerUser.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${stat.eventCount}</td>\n                </tr>\n                `)}\n            </tbody>\n        </table>\n        ` : `<div class=\"no-data\">No data available for this week.</div>`}\n        \n        <h3>Prior Week</h3>\n        ${engagementStats.priorWeek && engagementStats.priorWeek.length ? `\n        <table class=\"engagement-table\">\n            <thead>\n                <tr>\n                    <th>Page</th>\n                    <th>Page Views</th>\n                    <th>Active Users</th>\n                    <th>Views per User</th>\n                    <th>Event Count</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${generateTableRows(engagementStats.priorWeek, (stat) => `\n                <tr>\n                    <td>${stat.page}</td>\n                    <td class=\"numeric-cell\">${stat.pageViews}</td>\n                    <td class=\"numeric-cell\">${stat.activeUsers}</td>\n                    <td class=\"numeric-cell\">${stat.viewsPerUser.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${stat.eventCount}</td>\n                </tr>\n                `)}\n            </tbody>\n        </table>\n        ` : `<div class=\"no-data\">No data available for prior week.</div>`}\n        \n        <!-- Search Results Section -->\n        <h2><span class=\"section-accent-search\">Search Results</span></h2>\n        \n        <h3>This Week</h3>\n        ${searchResults.thisWeek && searchResults.thisWeek.length ? `\n        <table class=\"search-table\">\n            <thead>\n                <tr>\n                    <th>Page</th>\n                    <th>Active Users</th>\n                    <th>Engaged Sessions</th>\n                    <th>Engagement Rate</th>\n                    <th>Event Count</th>\n                    <th>Avg Position</th>\n                    <th>CTR</th>\n                    <th>Clicks</th>\n                    <th>Impressions</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${generateTableRows(searchResults.thisWeek, (result) => `\n                <tr>\n                    <td>${result.page}</td>\n                    <td class=\"numeric-cell\">${result.activeUsers}</td>\n                    <td class=\"numeric-cell\">${result.engagedSessions}</td>\n                    <td class=\"numeric-cell\">${result.engagementRate.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${result.eventCount}</td>\n                    <td class=\"numeric-cell\">${result.avgPosition.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${result.ctr.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${result.clicks}</td>\n                    <td class=\"numeric-cell\">${result.impressions}</td>\n                </tr>\n                `)}\n            </tbody>\n        </table>\n        ` : `<div class=\"no-data\">No data available for this week.</div>`}\n        \n        <h3>Last Week</h3>\n        ${searchResults.lastWeek && searchResults.lastWeek.length ? `\n        <table class=\"search-table\">\n            <thead>\n                <tr>\n                    <th>Page</th>\n                    <th>Active Users</th>\n                    <th>Engaged Sessions</th>\n                    <th>Engagement Rate</th>\n                    <th>Event Count</th>\n                    <th>Avg Position</th>\n                    <th>CTR</th>\n                    <th>Clicks</th>\n                    <th>Impressions</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${generateTableRows(searchResults.lastWeek, (result) => `\n                <tr>\n                    <td>${result.page}</td>\n                    <td class=\"numeric-cell\">${result.activeUsers}</td>\n                    <td class=\"numeric-cell\">${result.engagedSessions}</td>\n                    <td class=\"numeric-cell\">${result.engagementRate.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${result.eventCount}</td>\n                    <td class=\"numeric-cell\">${result.avgPosition.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${result.ctr.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${result.clicks}</td>\n                    <td class=\"numeric-cell\">${result.impressions}</td>\n                </tr>\n                `)}\n            </tbody>\n        </table>\n        ` : `<div class=\"no-data\">No data available for last week.</div>`}\n        \n        <!-- Country Views Section -->\n        <h2><span class=\"section-accent-country\">Country Views</span></h2>\n        \n        <h3>This Week</h3>\n        ${countryViews.thisWeek && countryViews.thisWeek.length ? `\n        <table class=\"country-table\">\n            <thead>\n                <tr>\n                    <th>Country</th>\n                    <th>Active Users</th>\n                    <th>New Users</th>\n                    <th>Engagement Rate</th>\n                    <th>Engaged Sessions</th>\n                    <th>Event Count</th>\n                    <th>Total Users</th>\n                    <th>Sessions</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${generateTableRows(countryViews.thisWeek, (view) => `\n                <tr>\n                    <td>${view.country}</td>\n                    <td class=\"numeric-cell\">${view.activeUsers}</td>\n                    <td class=\"numeric-cell\">${view.newUsers}</td>\n                    <td class=\"numeric-cell\">${view.engagementRate.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${view.engagedSessions}</td>\n                    <td class=\"numeric-cell\">${view.eventCount}</td>\n                    <td class=\"numeric-cell\">${view.totalUsers}</td>\n                    <td class=\"numeric-cell\">${view.sessions}</td>\n                </tr>\n                `)}\n            </tbody>\n        </table>\n        ` : `<div class=\"no-data\">No data available for this week.</div>`}\n        \n        <h3>Last Week</h3>\n        ${countryViews.lastWeek && countryViews.lastWeek.length ? `\n        <table class=\"country-table\">\n            <thead>\n                <tr>\n                    <th>Country</th>\n                    <th>Active Users</th>\n                    <th>New Users</th>\n                    <th>Engagement Rate</th>\n                    <th>Engaged Sessions</th>\n                    <th>Event Count</th>\n                    <th>Total Users</th>\n                    <th>Sessions</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${generateTableRows(countryViews.lastWeek, (view) => `\n                <tr>\n                    <td>${view.country}</td>\n                    <td class=\"numeric-cell\">${view.activeUsers}</td>\n                    <td class=\"numeric-cell\">${view.newUsers}</td>\n                    <td class=\"numeric-cell\">${view.engagementRate.toFixed(2)}</td>\n                    <td class=\"numeric-cell\">${view.engagedSessions}</td>\n                    <td class=\"numeric-cell\">${view.eventCount}</td>\n                    <td class=\"numeric-cell\">${view.totalUsers}</td>\n                    <td class=\"numeric-cell\">${view.sessions}</td>\n                </tr>\n                `)}\n            </tbody>\n        </table>\n        ` : `<div class=\"no-data\">No data available for last week.</div>`}\n        \n        <div class=\"footer\">\n            <p>This is an automated analytics report generated on:</p>\n            <p>ðŸ‡«ðŸ‡· France: ${formatFrenchTime()} | ðŸ‡®ðŸ‡³ India: ${formatIndianTime()}</p>\n        </div>\n    </div>\n</body>\n</html>\n`;\n\n// Output the title and formatted HTML\nreturn {\n    json: {\n        title: `GA Weekly Report ${formattedDate}`,\n        htmlContent: htmlTemplate\n    }\n};"},"id":"1a6933bd-35b0-4b00-ab6a-6bf2e28d4b29","name":"Format Data1","type":"n8n-nodes-base.code","position":[2680,1320],"typeVersion":2},{"parameters":{"jsCode":"console.log($input.all());\nreturn $input.all();\n"},"id":"6e763387-218a-452e-bb93-140270dcfd1f","name":"Input All1","type":"n8n-nodes-base.code","position":[3080,1060],"typeVersion":2},{"parameters":{"sendTo":"m.jasim@gmindia.tech","subject":"={{ $('If empty').item.json['Website Link'] }} {{ $json.title }}","message":"={{ $json.htmlContent }}","options":{"appendAttribution":"={{ false }}","senderName":"GMIndia Website Weekly GA Report"}},"id":"4639ebcd-91e1-4a6c-9158-8fb963737eb9","name":"Email the Report1","type":"n8n-nodes-base.gmail","position":[2880,1320],"webhookId":"80d4d964-449a-4599-b2de-bca9c8822bbd","typeVersion":2.1,"credentials":{"gmailOAuth2":{"id":"CTQPBdqXhtBIuuJt","name":"Gmail account 5"}}},{"parameters":{"content":"# GMIndia Google Analytics data and Email the results\n\nThis workflow will check for country views, page engagement and google search console results. It will take this week's data and compare it to last week's data.\n\n[Credit to Keith Rumjahn for the original workflow, which I modified.](https://rumjahn.com/how-i-used-a-i-to-be-an-seo-expert-and-analyzed-my-google-analytics-data-in-n8n-and-make-com/)","height":209,"width":1930,"color":6},"id":"fd1c16a9-5bc5-410c-a80a-b285c5035760","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[1880,360],"typeVersion":1},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[2360,660],"id":"7191dd39-9897-409f-b242-f0092ad6bc82","name":"Loop Over Items"},{"parameters":{"documentId":{"__rl":true,"value":"1Fcuf9Nl0HIFgtu7F3G0z5MbgH9k---dVwTf_sbEOMyU","mode":"list","cachedResultName":"GMI Websites Google Anaytics Properties","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Fcuf9Nl0HIFgtu7F3G0z5MbgH9k---dVwTf_sbEOMyU/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Properties","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Fcuf9Nl0HIFgtu7F3G0z5MbgH9k---dVwTf_sbEOMyU/edit#gid=0"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[2120,660],"id":"bb95c37d-e876-48c2-a780-856b6ac6f257","name":"Get properties & site links","credentials":{"googleSheetsOAuth2Api":{"id":"elzGQmQMVKk7BX6Q","name":"Google Sheets account 9"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"de0776c0-a081-42b3-bc77-2156116c46ce","leftValue":"={{ $json['Property ID'] }}","rightValue":"={{ $json['Property ID'] }}","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"or"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2420,900],"id":"5588dc54-5a45-4a07-ad6f-b933fa1e51a9","name":"If empty"}],"connections":{"Input All":{"main":[[{"node":"Format Data","type":"main","index":0}]]},"Format Data":{"main":[[{"node":"Email the Report","type":"main","index":0}]]},"Aggregate Data":{"main":[[{"node":"Input All","type":"main","index":0}]]},"Set urlStrings":{"main":[[{"node":"Aggregate Data","type":"main","index":0}]]},"Parse - Country Views This Week":{"main":[[{"node":"Get Country views data for prior week","type":"main","index":0}]]},"Parse - Country Views Prior Week":{"main":[[{"node":"Set urlStrings","type":"main","index":0}]]},"Parse - Get Google Search This Week":{"main":[[{"node":"Get Google Search Results for prior week","type":"main","index":0}]]},"Get Country views data for this week":{"main":[[{"node":"Parse - Country Views This Week","type":"main","index":0}]]},"Parse - Get Google Search Prior Week":{"main":[[{"node":"Get Country views data for this week","type":"main","index":0}]]},"Get Country views data for prior week":{"main":[[{"node":"Parse - Country Views Prior Week","type":"main","index":0}]]},"Parse - Get Page Engagement This Week":{"main":[[{"node":"Get Page Engagement Stats for prior week","type":"main","index":0}]]},"Parse - Get Page Engagement Prior Week":{"main":[[{"node":"Get Google Search Results for this week","type":"main","index":0}]]},"Get Google Search Results for this week":{"main":[[{"node":"Parse - Get Google Search This Week","type":"main","index":0}]]},"Get Page Engagement Stats for this week":{"main":[[{"node":"Parse - Get Page Engagement This Week","type":"main","index":0}]]},"Get Google Search Results for prior week":{"main":[[{"node":"Parse - Get Google Search Prior Week","type":"main","index":0}]]},"Get Page Engagement Stats for prior week":{"main":[[{"node":"Parse - Get Page Engagement Prior Week","type":"main","index":0}]]},"Get Page Engagement Stats for this week1":{"main":[[{"node":"Parse - Get Page Engagement This Week1","type":"main","index":0}]]},"Get Page Engagement Stats for prior week1":{"main":[[{"node":"Parse - Get Page Engagement Prior Week1","type":"main","index":0}]]},"Get Google Search Results for this week1":{"main":[[{"node":"Parse - Get Google Search This Week1","type":"main","index":0}]]},"Get Country views data for this week1":{"main":[[{"node":"Parse - Country Views This Week1","type":"main","index":0}]]},"Aggregate Data1":{"main":[[{"node":"Input All1","type":"main","index":0}]]},"Get Google Search Results for prior week1":{"main":[[{"node":"Parse - Get Google Search Prior Week1","type":"main","index":0}]]},"Get Country views data for prior week1":{"main":[[{"node":"Parse - Country Views Prior Week1","type":"main","index":0}]]},"Parse - Get Page Engagement This Week1":{"main":[[{"node":"Get Page Engagement Stats for prior week1","type":"main","index":0}]]},"Parse - Get Page Engagement Prior Week1":{"main":[[{"node":"Get Google Search Results for this week1","type":"main","index":0}]]},"Parse - Get Google Search This Week1":{"main":[[{"node":"Get Google Search Results for prior week1","type":"main","index":0}]]},"Parse - Get Google Search Prior Week1":{"main":[[{"node":"Get Country views data for this week1","type":"main","index":0}]]},"Parse - Country Views This Week1":{"main":[[{"node":"Get Country views data for prior week1","type":"main","index":0}]]},"Parse - Country Views Prior Week1":{"main":[[{"node":"Set urlStrings1","type":"main","index":0}]]},"Set urlStrings1":{"main":[[{"node":"Aggregate Data1","type":"main","index":0}]]},"Format Data1":{"main":[[{"node":"Email the Report1","type":"main","index":0}]]},"Input All1":{"main":[[{"node":"Format Data1","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"If empty","type":"main","index":0}]]},"Get properties & site links":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"If empty":{"main":[[{"node":"Get Page Engagement Stats for this week1","type":"main","index":0}],[{"node":"Loop Over Items","type":"main","index":0}]]},"Email the Report1":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Get properties & site links","type":"main","index":0}]]}},"settings":{},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]},"node:Schedule Trigger1":{"recurrenceRules":[]}},"meta":{"templateId":"2549","templateCredsSetupCompleted":true},"pinData":{},"versionId":"24857aaf-1d55-4b7f-8894-22402b75dd2e","triggerCount":1,"shared":[{"createdAt":"2025-03-04T05:03:59.806Z","updatedAt":"2025-03-04T05:03:59.806Z","role":"workflow:owner","workflowId":"L62naD3RmIt3dFD9","projectId":"tktBUJ9Wt0VRCCM2"}],"tags":[]}